{"version":3,"sources":["webpack:///./app/javascript/mastodon/components/admin/ReportReasonSelector.jsx"],"names":["messages","defineMessages","legal","id","defaultMessage","other","spam","violation","Category","PureComponent","constructor","arguments","_defineProperty","disabled","onSelect","this","props","render","text","selected","children","_jsx","tabIndex","role","className","classNames","onClick","handleClick","type","name","value","active","Rule","onToggle","checkbox","ReportReasonSelector","category","rule_ids","rules","state","api","put","concat","catch","err","console","error","setState","_save","includes","filter","x","componentDidMount","get","then","res","data","intl","formatMessage","handleSelect","map","rule","handleToggle","injectIntl"],"mappings":"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","file":"js/434-b6f6a288473268515117.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport api from 'mastodon/api';\n\nconst messages = defineMessages({\n  legal: { id: 'report.categories.legal', defaultMessage: 'Legal' },\n  other: { id: 'report.categories.other', defaultMessage: 'Other' },\n  spam: { id: 'report.categories.spam', defaultMessage: 'Spam' },\n  violation: { id: 'report.categories.violation', defaultMessage: 'Content violates one or more server rules' },\n});\n\nclass Category extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onSelect: PropTypes.func,\n    children: PropTypes.node,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onSelect } = this.props;\n\n    if (!disabled) {\n      onSelect(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected, children } = this.props;\n\n    return (\n      <div tabIndex={0} role='button' className={classNames('report-reason-selector__category', { selected, disabled })} onClick={this.handleClick}>\n        {selected && <input type='hidden' name='report[category]' value={id} />}\n\n        <div className='report-reason-selector__category__label'>\n          <span className={classNames('poll__input', { active: selected, disabled })} />\n          {text}\n        </div>\n\n        {(selected && children) && (\n          <div className='report-reason-selector__category__rules'>\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nclass Rule extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onToggle: PropTypes.func,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onToggle } = this.props;\n\n    if (!disabled) {\n      onToggle(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected } = this.props;\n\n    return (\n      <div tabIndex={0} role='button' className={classNames('report-reason-selector__rule', { selected, disabled })} onClick={this.handleClick}>\n        <span className={classNames('poll__input', { checkbox: true, active: selected, disabled })} />\n        {selected && <input type='hidden' name='report[rule_ids][]' value={id} />}\n        {text}\n      </div>\n    );\n  }\n\n}\n\nclass ReportReasonSelector extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    rule_ids: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    category: this.props.category,\n    rule_ids: this.props.rule_ids || [],\n    rules: [],\n  };\n\n  componentDidMount() {\n    api().get('/api/v1/instance').then(res => {\n      this.setState({\n        rules: res.data.rules,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  _save = () => {\n    const { id, disabled } = this.props;\n    const { category, rule_ids } = this.state;\n\n    if (disabled) {\n      return;\n    }\n\n    api().put(`/api/v1/admin/reports/${id}`, {\n      category,\n      rule_ids: category === 'violation' ? rule_ids : [],\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  handleSelect = id => {\n    this.setState({ category: id }, () => this._save());\n  };\n\n  handleToggle = id => {\n    const { rule_ids } = this.state;\n\n    if (rule_ids.includes(id)) {\n      this.setState({ rule_ids: rule_ids.filter(x => x !== id ) }, () => this._save());\n    } else {\n      this.setState({ rule_ids: [...rule_ids, id] }, () => this._save());\n    }\n  };\n\n  render () {\n    const { disabled, intl } = this.props;\n    const { rules, category, rule_ids } = this.state;\n\n    return (\n      <div className='report-reason-selector'>\n        <Category id='other' text={intl.formatMessage(messages.other)} selected={category === 'other'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='legal' text={intl.formatMessage(messages.legal)} selected={category === 'legal'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='spam' text={intl.formatMessage(messages.spam)} selected={category === 'spam'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='violation' text={intl.formatMessage(messages.violation)} selected={category === 'violation'} onSelect={this.handleSelect} disabled={disabled}>\n          {rules.map(rule => <Rule key={rule.id} id={rule.id} text={rule.text} selected={rule_ids.includes(rule.id)} onToggle={this.handleToggle} disabled={disabled} />)}\n        </Category>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(ReportReasonSelector);\n"],"sourceRoot":""}