{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/bookmarked_statuses/index.jsx"],"names":["messages","defineMessages","heading","id","defaultMessage","Bookmarks","ImmutablePureComponent","constructor","arguments","_defineProperty","columnId","dispatch","this","props","removeColumn","addColumn","dir","moveColumn","column","scrollTop","c","_debounce","expandBookmarkedStatuses","leading","UNSAFE_componentWillMount","fetchBookmarkedStatuses","render","intl","statusIds","multiColumn","hasMore","isLoading","pinned","emptyMessage","_jsx","FormattedMessage","_jsxs","Column","bindToDocument","ref","setRef","label","formatMessage","children","ColumnHeader","icon","iconComponent","BookmarksIcon","title","onPin","handlePin","onMove","handleMove","onClick","handleHeaderClick","StatusList","trackScroll","scrollKey","concat","onLoadMore","handleLoadMore","Helmet","name","content","PropTypes","func","isRequired","ImmutablePropTypes","list","object","string","bool","connect","state","getStatusList","getIn","injectIntl"],"mappings":"qSAoBA,MAAMA,EAAWC,YAAe,CAC9BC,QAAS,CAAEC,GAAG,mBAAqBC,eAAe,eASpD,MAAMC,UAAkBC,IAAuBC,cAAA,SAAAC,WAAAC,YAAA,kBAgBjC,KACV,MAAM,SAAEC,EAAQ,SAAEC,GAAaC,KAAKC,MAGlCF,EADED,EACOI,YAAaJ,GAEbK,YAAU,YAAa,CAAC,GACnC,IACDN,YAAA,mBAEaO,IACZ,MAAM,SAAEN,EAAQ,SAAEC,GAAaC,KAAKC,MACpCF,EAASM,YAAWP,EAAUM,GAAK,IACpCP,YAAA,0BAEmB,KAClBG,KAAKM,OAAOC,WAAW,IACxBV,YAAA,eAEQW,IACPR,KAAKM,OAASE,CAAC,IAChBX,YAAA,sBAEgBY,KAAS,KACxBT,KAAKC,MAAMF,SAASW,cAA2B,GAC9C,IAAK,CAAEC,SAAS,IAAO,CA7B1BC,4BACEZ,KAAKC,MAAMF,SAASc,cACtB,CA6BAC,SACE,MAAM,KAAEC,EAAI,UAAEC,EAAS,SAAElB,EAAQ,YAAEmB,EAAW,QAAEC,EAAO,UAAEC,GAAcnB,KAAKC,MACtEmB,IAAWtB,EAEXuB,EAAeC,YAACC,IAAgB,CAAChC,GAAE,mCAAoCC,eAAe,0FAE5F,OACEgC,eAACC,IAAM,CAACC,gBAAiBT,EAAaU,IAAK3B,KAAK4B,OAAQC,MAAOd,EAAKe,cAAc1C,EAASE,SAASyC,SAAA,CAClGT,YAACU,IAAY,CACXC,KAAK,YACLC,cAAeC,IACfC,MAAOrB,EAAKe,cAAc1C,EAASE,SACnC+C,MAAOrC,KAAKsC,UACZC,OAAQvC,KAAKwC,WACbC,QAASzC,KAAK0C,kBACdtB,OAAQA,EACRH,YAAaA,IAGfK,YAACqB,IAAU,CACTC,aAAcxB,EACdJ,UAAWA,EACX6B,UAAS,uBAAAC,OAAyBhD,GAClCoB,QAASA,EACTC,UAAWA,EACX4B,WAAY/C,KAAKgD,eACjB3B,aAAcA,EACdK,gBAAiBT,IAGnBK,YAAC2B,IAAM,UACL3B,YAAA,kBAAQP,EAAKe,cAAc1C,EAASE,UACpCgC,YAAA,QAAM4B,KAAK,SAASC,QAAQ,eAIpC,EAEDtD,YAjFKJ,EAAS,YAEM,CACjBM,SAAUqD,IAAUC,KAAKC,WACzBtC,UAAWuC,IAAmBC,KAAKF,WACnCvC,KAAMqC,IAAUK,OAAOH,WACvBxD,SAAUsD,IAAUM,OACpBzC,YAAamC,IAAUO,KACvBzC,QAASkC,IAAUO,KACnBxC,UAAWiC,IAAUO,OA0EVC,6BAzFSC,IAAK,CAC3B7C,UAAW8C,YAAcD,EAAO,aAChC1C,UAAW0C,EAAME,MAAM,CAAC,eAAgB,YAAa,cAAc,GACnE7C,UAAW2C,EAAME,MAAM,CAAC,eAAgB,YAAa,YAsFxCH,CAAyBI,YAAWvE,G","file":"js/features/bookmarked_statuses-ba11667cb19a67b648e6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport BookmarksIcon from '@/material-icons/400-24px/bookmarks-fill.svg?react';\nimport { fetchBookmarkedStatuses, expandBookmarkedStatuses } from 'mastodon/actions/bookmarks';\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport StatusList from 'mastodon/components/status_list';\nimport Column from 'mastodon/features/ui/components/column';\nimport { getStatusList } from 'mastodon/selectors';\n\nconst messages = defineMessages({\n  heading: { id: 'column.bookmarks', defaultMessage: 'Bookmarks' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: getStatusList(state, 'bookmarks'),\n  isLoading: state.getIn(['status_lists', 'bookmarks', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'bookmarks', 'next']),\n});\n\nclass Bookmarks extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchBookmarkedStatuses());\n  }\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('BOOKMARKS', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandBookmarkedStatuses());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.bookmarked_statuses' defaultMessage=\"You don't have any bookmarked posts yet. When you bookmark one, it will show up here.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.heading)}>\n        <ColumnHeader\n          icon='bookmarks'\n          iconComponent={BookmarksIcon}\n          title={intl.formatMessage(messages.heading)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n        />\n\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`bookmarked_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.heading)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Bookmarks));\n"],"sourceRoot":""}