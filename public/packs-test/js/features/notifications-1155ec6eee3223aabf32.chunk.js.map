{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/done_all.svg","webpack:///./app/javascript/mastodon/features/notifications/components/filtered_notifications_banner.jsx","webpack:///./app/javascript/material-icons/400-20px/settings.svg","webpack:///./app/javascript/mastodon/features/notifications/components/notifications_permission_banner.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/checkbox_with_label.jsx","webpack:///./app/javascript/material-icons/400-24px/delete_forever.svg","webpack:///./app/javascript/mastodon/features/notifications/components/clear_column_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/grant_permission_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/column_settings.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/column_settings_container.js","webpack:///./app/javascript/mastodon/features/notifications/components/filter_bar.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/filter_bar_container.js","webpack:///./app/javascript/mastodon/features/notifications/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","FilteredNotificationsBanner","dispatch","useDispatch","policy","useSelector","state","get","useEffect","fetchNotificationPolicy","interval","setInterval","clearInterval","getIn","_jsx","Link","className","to","Icon","icon","InventoryIcon","FormattedMessage","defaultMessage","values","count","toCappedNumber","messages","defineMessages","close","NotificationsPermissionBanner","PureComponent","constructor","_defineProperty","requestBrowserPermission","changeSetting","render","intl","IconButton","iconComponent","CloseIcon","onClick","handleClose","formatMessage","SettingsIcon","Button","handleClick","connect","injectIntl","CheckboxWithLabel","checked","disabled","children","onChange","handleChange","useCallback","_ref2","Toggle","ClearColumnButton","tabIndex","DeleteForeverIcon","GrantPermissionButton","ColumnSettings","path","onChangePolicy","settings","pushSettings","onClear","alertsEnabled","browserSupport","browserPermission","onRequestNotificationPermission","notificationPolicy","filterAdvancedStr","unreadMarkersShowStr","alertStr","showStr","soundStr","showPushSettings","pushStr","handleFilterNotFollowing","handleFilterNotFollowers","days","handleFilterNewAccounts","handleFilterPrivateMentions","role","SettingToggle","prefix","settingPath","label","onPushChange","context","identity","permissions","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_REPORTS","PropTypes","object","clearMessage","clearConfirm","permissionDenied","includes","mapDispatchToProps","window","Notification","permission","changePushNotifications","slice","showAlert","message","setFilter","openModal","modalType","modalProps","confirm","onConfirm","clearNotifications","param","updateNotificationsPolicy","tooltips","mentions","favourites","boosts","polls","follows","statuses","FilterBar","notificationType","selectFilter","selectedFilter","advancedMode","ReplyAllIcon","StarIcon","RepeatIcon","InsertChartIcon","HomeIcon","PersonAddIcon","newActiveFilter","markAsRead","getExcludedTypes","createSelector","shows","ImmutableList","filter","item","keys","getNotifications","showFilterBar","allowedType","excludedTypes","notifications","filterNot","Notifications","maxId","expandNotifications","_debounce","last","leading","loadPending","scrollTopNotifications","columnId","removeColumn","addColumn","dir","moveColumn","column","scrollTop","c","elementIndex","findIndex","_selectChild","markNotificationsAsRead","submitMarkers","immediate","UNSAFE_componentWillMount","mountNotifications","componentWillUnmount","handleLoadOlder","cancel","handleScrollToTop","handleScroll","unmountNotifications","index","align_top","container","node","element","querySelector","concat","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","isLoading","isUnread","multiColumn","hasMore","numPending","lastReadId","canMarkAsRead","needsNotificationPermission","pinned","emptyMessage","signedIn","scrollableContent","filterBarContainer","FilterBarContainer","scrollContainer","size","map","LoadGap","handleLoadGap","NotificationContainer","notification","accountId","onMoveUp","handleMoveUp","onMoveDown","handleMoveDown","unread","compareId","ScrollableList","scrollKey","trackScroll","showLoading","prepend","alwaysPrepend","onLoadMore","onLoadPending","handleLoadPending","onScrollToTop","onScroll","bindToDocument","NotSignedInIndicator","extraButton","handleMarkAsRead","DoneAllIcon","_jsxs","Column","ref","setColumnRef","ColumnHeader","NotificationsIcon","active","onPin","handlePin","onMove","handleMove","handleHeaderClick","ColumnSettingsContainer","Helmet","name","content","some"],"mappings":"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","file":"js/features/notifications-1155ec6eee3223aabf32.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDoneAll(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268-240 42-466l57-56 170 170 56 56-57 56Zm226 0L268-466l56-57 170 170 368-368 56 57-424 424Zm0-226-57-56 198-198 57 56-198 198Z\"\n  })));\n}\nexport default SvgDoneAll;","import { useEffect } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InventoryIcon from '@/material-icons/400-24px/inventory_2.svg?react';\nimport { fetchNotificationPolicy } from 'mastodon/actions/notifications';\nimport { Icon } from 'mastodon/components/icon';\nimport { toCappedNumber } from 'mastodon/utils/numbers';\n\nexport const FilteredNotificationsBanner = () => {\n  const dispatch = useDispatch();\n  const policy = useSelector(state => state.get('notificationPolicy'));\n\n  useEffect(() => {\n    dispatch(fetchNotificationPolicy());\n\n    const interval = setInterval(() => {\n      dispatch(fetchNotificationPolicy());\n    }, 120000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [dispatch]);\n\n  if (policy === null || policy.getIn(['summary', 'pending_notifications_count']) === 0) {\n    return null;\n  }\n\n  return (\n    <Link className='filtered-notifications-banner' to='/notifications/requests'>\n      <Icon icon={InventoryIcon} />\n\n      <div className='filtered-notifications-banner__text'>\n        <strong><FormattedMessage id='filtered_notifications_banner.title' defaultMessage='Filtered notifications' /></strong>\n        <span><FormattedMessage id='filtered_notifications_banner.pending_requests' defaultMessage='Notifications from {count, plural, =0 {no one} one {one person} other {# people}} you may know' values={{ count: policy.getIn(['summary', 'pending_requests_count']) }} /></span>\n      </div>\n\n      <div className='filtered-notifications-banner__badge'>\n        <div className='filtered-notifications-banner__badge__badge'>{toCappedNumber(policy.getIn(['summary', 'pending_notifications_count']))}</div>\n        <FormattedMessage id='filtered_notifications_banner.mentions' defaultMessage='{count, plural, one {mention} other {mentions}}' values={{ count: policy.getIn(['summary', 'pending_notifications_count']) }} />\n      </div>\n    </Link>\n  );\n};\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSettings(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 20,\n    viewBox: \"0 -960 960 960\",\n    width: 20,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m403-96-22-114q-23-9-44.5-21T296-259l-110 37-77-133 87-76q-2-12-3-24t-1-25q0-13 1-25t3-24l-87-76 77-133 110 37q19-16 40.5-28t44.5-21l22-114h154l22 114q23 9 44.5 21t40.5 28l110-37 77 133-87 76q2 12 3 24t1 25q0 13-1 25t-3 24l87 76-77 133-110-37q-19 16-40.5 28T579-210L557-96H403Zm59-72h36l19-99q38-7 71-26t57-48l96 32 18-30-76-67q6-17 9.5-35.5T696-480q0-20-3.5-38.5T683-554l76-67-18-30-96 32q-24-29-57-48t-71-26l-19-99h-36l-19 99q-38 7-71 26t-57 48l-96-32-18 30 76 67q-6 17-9.5 35.5T264-480q0 20 3.5 38.5T277-406l-76 67 18 30 96-32q24 29 57 48t71 26l19 99Zm18-168q60 0 102-42t42-102q0-60-42-102t-102-42q-60 0-102 42t-42 102q0 60 42 102t102 42Zm0-144Z\"\n  })));\n}\nexport default SvgSettings;","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport SettingsIcon from '@/material-icons/400-20px/settings.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport { requestBrowserPermission } from 'mastodon/actions/notifications';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { Button } from 'mastodon/components/button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass NotificationsPermissionBanner extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.dispatch(requestBrowserPermission());\n  };\n\n  handleClose = () => {\n    this.props.dispatch(changeSetting(['notifications', 'dismissPermissionBanner'], true));\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    return (\n      <div className='notifications-permission-banner'>\n        <div className='notifications-permission-banner__close'>\n          <IconButton icon='times' iconComponent={CloseIcon} onClick={this.handleClose} title={intl.formatMessage(messages.close)} />\n        </div>\n\n        <h2><FormattedMessage id='notifications_permission_banner.title' defaultMessage='Never miss a thing' /></h2>\n        <p><FormattedMessage id='notifications_permission_banner.how_to_control' defaultMessage=\"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled.\" values={{ icon: <Icon id='sliders' icon={SettingsIcon} /> }} /></p>\n        <Button onClick={this.handleClick}><FormattedMessage id='notifications_permission_banner.enable' defaultMessage='Enable desktop notifications' /></Button>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(NotificationsPermissionBanner));\n","import PropTypes from 'prop-types';\nimport { useCallback } from 'react';\n\nimport Toggle from 'react-toggle';\n\nexport const CheckboxWithLabel = ({ checked, disabled, children, onChange }) => {\n  const handleChange = useCallback(({ target }) => {\n    onChange(target.checked);\n  }, [onChange]);\n\n  return (\n    <label className='app-form__toggle'>\n      <div className='app-form__toggle__label'>\n        {children}\n      </div>\n\n      <div className='app-form__toggle__toggle'>\n        <div>\n          <Toggle checked={checked} onChange={handleChange} disabled={disabled} />\n        </div>\n      </div>\n    </label>\n  );\n};\n\nCheckboxWithLabel.propTypes = {\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.children,\n  onChange: PropTypes.func,\n};\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDeleteForever(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m376-300 104-104 104 104 56-56-104-104 104-104-56-56-104 104-104-104-56 56 104 104-104 104 56 56Zm-96 180q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520Zm-400 0v520-520Z\"\n  })));\n}\nexport default SvgDeleteForever;","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport DeleteForeverIcon from '@/material-icons/400-24px/delete_forever.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\n\nexport default class ClearColumnButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.props.onClick}><Icon id='eraser' icon={DeleteForeverIcon} /> <FormattedMessage id='notifications.clear' defaultMessage='Clear notifications' /></button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nexport default class GrantPermissionButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__permission-btn' tabIndex={0} onClick={this.props.onClick}>\n        <FormattedMessage id='notifications.grant_permission' defaultMessage='Grant permission.' />\n      </button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_REPORTS } from 'mastodon/permissions';\n\nimport { CheckboxWithLabel } from './checkbox_with_label';\nimport ClearColumnButton from './clear_column_button';\nimport GrantPermissionButton from './grant_permission_button';\nimport SettingToggle from './setting_toggle';\n\nexport default class ColumnSettings extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    settings: ImmutablePropTypes.map.isRequired,\n    pushSettings: ImmutablePropTypes.map.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onRequestNotificationPermission: PropTypes.func,\n    alertsEnabled: PropTypes.bool,\n    browserSupport: PropTypes.bool,\n    browserPermission: PropTypes.string,\n    notificationPolicy: ImmutablePropTypes.map,\n    onChangePolicy: PropTypes.func.isRequired,\n  };\n\n  onPushChange = (path, checked) => {\n    this.props.onChange(['push', ...path], checked);\n  };\n\n  handleFilterNotFollowing = checked => {\n    this.props.onChangePolicy('filter_not_following', checked);\n  };\n\n  handleFilterNotFollowers = checked => {\n    this.props.onChangePolicy('filter_not_followers', checked);\n  };\n\n  handleFilterNewAccounts = checked => {\n    this.props.onChangePolicy('filter_new_accounts', checked);\n  };\n\n  handleFilterPrivateMentions = checked => {\n    this.props.onChangePolicy('filter_private_mentions', checked);\n  };\n\n  render () {\n    const { settings, pushSettings, onChange, onClear, alertsEnabled, browserSupport, browserPermission, onRequestNotificationPermission, notificationPolicy } = this.props;\n\n    const filterAdvancedStr = <FormattedMessage id='notifications.column_settings.filter_bar.advanced' defaultMessage='Display all categories' />;\n    const unreadMarkersShowStr = <FormattedMessage id='notifications.column_settings.unread_notifications.highlight' defaultMessage='Highlight unread notifications' />;\n    const alertStr = <FormattedMessage id='notifications.column_settings.alert' defaultMessage='Desktop notifications' />;\n    const showStr = <FormattedMessage id='notifications.column_settings.show' defaultMessage='Show in column' />;\n    const soundStr = <FormattedMessage id='notifications.column_settings.sound' defaultMessage='Play sound' />;\n\n    const showPushSettings = pushSettings.get('browserSupport') && pushSettings.get('isSubscribed');\n    const pushStr = showPushSettings && <FormattedMessage id='notifications.column_settings.push' defaultMessage='Push notifications' />;\n\n    return (\n      <div className='column-settings'>\n        {alertsEnabled && browserSupport && browserPermission === 'denied' && (\n          <span className='warning-hint'><FormattedMessage id='notifications.permission_denied' defaultMessage='Desktop notifications are unavailable due to previously denied browser permissions request' /></span>\n        )}\n\n        <section>\n          <ClearColumnButton onClick={onClear} />\n        </section>\n\n        {alertsEnabled && browserSupport && browserPermission === 'default' && (\n          <section>\n            <span className='warning-hint'>\n              <FormattedMessage id='notifications.permission_required' defaultMessage='Desktop notifications are unavailable because the required permission has not been granted.' /> <GrantPermissionButton onClick={onRequestNotificationPermission} />\n            </span>\n          </section>\n        )}\n\n        <section>\n          <h3><FormattedMessage id='notifications.policy.title' defaultMessage='Filter out notifications from…' /></h3>\n\n          <div className='column-settings__row'>\n            <CheckboxWithLabel checked={notificationPolicy.get('filter_not_following')} onChange={this.handleFilterNotFollowing}>\n              <strong><FormattedMessage id='notifications.policy.filter_not_following_title' defaultMessage=\"People you don't follow\" /></strong>\n              <span className='hint'><FormattedMessage id='notifications.policy.filter_not_following_hint' defaultMessage='Until you manually approve them' /></span>\n            </CheckboxWithLabel>\n\n            <CheckboxWithLabel checked={notificationPolicy.get('filter_not_followers')} onChange={this.handleFilterNotFollowers}>\n              <strong><FormattedMessage id='notifications.policy.filter_not_followers_title' defaultMessage='People not following you' /></strong>\n              <span className='hint'><FormattedMessage id='notifications.policy.filter_not_followers_hint' defaultMessage='Including people who have been following you fewer than {days, plural, one {one day} other {# days}}' values={{ days: 3 }} /></span>\n            </CheckboxWithLabel>\n\n            <CheckboxWithLabel checked={notificationPolicy.get('filter_new_accounts')} onChange={this.handleFilterNewAccounts}>\n              <strong><FormattedMessage id='notifications.policy.filter_new_accounts_title' defaultMessage='New accounts' /></strong>\n              <span className='hint'><FormattedMessage id='notifications.policy.filter_new_accounts.hint' defaultMessage='Created within the past {days, plural, one {one day} other {# days}}' values={{ days: 30 }} /></span>\n            </CheckboxWithLabel>\n\n            <CheckboxWithLabel checked={notificationPolicy.get('filter_private_mentions')} onChange={this.handleFilterPrivateMentions}>\n              <strong><FormattedMessage id='notifications.policy.filter_private_mentions_title' defaultMessage='Unsolicited private mentions' /></strong>\n              <span className='hint'><FormattedMessage id='notifications.policy.filter_private_mentions_hint' defaultMessage=\"Filtered unless it's in reply to your own mention or if you follow the sender\" /></span>\n            </CheckboxWithLabel>\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-unread-markers'>\n          <h3 id='notifications-unread-markers'>\n            <FormattedMessage id='notifications.column_settings.unread_notifications.category' defaultMessage='Unread notifications' />\n          </h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='unread-notification-markers' prefix='notifications' settings={settings} settingPath={['showUnread']} onChange={onChange} label={unreadMarkersShowStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-filter-bar'>\n          <h3 id='notifications-filter-bar'>\n            <FormattedMessage id='notifications.column_settings.filter_bar.category' defaultMessage='Quick filter bar' />\n          </h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='advanced-filter-bar' prefix='notifications' settings={settings} settingPath={['quickFilter', 'advanced']} onChange={onChange} label={filterAdvancedStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-follow'>\n          <h3 id='notifications-follow'><FormattedMessage id='notifications.column_settings.follow' defaultMessage='New followers:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-follow-request'>\n          <h3 id='notifications-follow-request'><FormattedMessage id='notifications.column_settings.follow_request' defaultMessage='New follow requests:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow_request']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow_request']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow_request']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow_request']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-favourite'>\n          <h3 id='notifications-favourite'><FormattedMessage id='notifications.column_settings.favourite' defaultMessage='Favorites:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'favourite']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'favourite']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'favourite']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'favourite']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-mention'>\n          <h3 id='notifications-mention'><FormattedMessage id='notifications.column_settings.mention' defaultMessage='Mentions:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'mention']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'mention']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'mention']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'mention']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-reblog'>\n          <h3 id='notifications-reblog'><FormattedMessage id='notifications.column_settings.reblog' defaultMessage='Boosts:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'reblog']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'reblog']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'reblog']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'reblog']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-poll'>\n          <h3 id='notifications-poll'><FormattedMessage id='notifications.column_settings.poll' defaultMessage='Poll results:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'poll']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'poll']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'poll']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'poll']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-status'>\n          <h3 id='notifications-status'><FormattedMessage id='notifications.column_settings.status' defaultMessage='New posts:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'status']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'status']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'status']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'status']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        <section role='group' aria-labelledby='notifications-update'>\n          <h3 id='notifications-update'><FormattedMessage id='notifications.column_settings.update' defaultMessage='Edits:' /></h3>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'update']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'update']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'update']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'update']} onChange={onChange} label={soundStr} />\n          </div>\n        </section>\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) && (\n          <section role='group' aria-labelledby='notifications-admin-sign-up'>\n            <h3 id='notifications-status'><FormattedMessage id='notifications.column_settings.admin.sign_up' defaultMessage='New sign-ups:' /></h3>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.sign_up']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.sign_up']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.sign_up']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.sign_up']} onChange={onChange} label={soundStr} />\n            </div>\n          </section>\n        )}\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_REPORTS) === PERMISSION_MANAGE_REPORTS) && (\n          <section role='group' aria-labelledby='notifications-admin-report'>\n            <h3 id='notifications-status'><FormattedMessage id='notifications.column_settings.admin.report' defaultMessage='New reports:' /></h3>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.report']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.report']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.report']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.report']} onChange={onChange} label={soundStr} />\n            </div>\n          </section>\n        )}\n      </div>\n    );\n  }\n\n}\n","import { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { showAlert } from '../../../actions/alerts';\nimport { openModal } from '../../../actions/modal';\nimport { setFilter, clearNotifications, requestBrowserPermission, updateNotificationsPolicy } from '../../../actions/notifications';\nimport { changeAlerts as changePushNotifications } from '../../../actions/push_notifications';\nimport { changeSetting } from '../../../actions/settings';\nimport ColumnSettings from '../components/column_settings';\n\nconst messages = defineMessages({\n  clearMessage: { id: 'notifications.clear_confirmation', defaultMessage: 'Are you sure you want to permanently clear all your notifications?' },\n  clearConfirm: { id: 'notifications.clear', defaultMessage: 'Clear notifications' },\n  permissionDenied: { id: 'notifications.permission_denied_alert', defaultMessage: 'Desktop notifications can\\'t be enabled, as browser permission has been denied before' },\n});\n\nconst mapStateToProps = state => ({\n  settings: state.getIn(['settings', 'notifications']),\n  pushSettings: state.get('push_notifications'),\n  alertsEnabled: state.getIn(['settings', 'notifications', 'alerts']).includes(true),\n  browserSupport: state.getIn(['notifications', 'browserSupport']),\n  browserPermission: state.getIn(['notifications', 'browserPermission']),\n  notificationPolicy: state.get('notificationPolicy'),\n});\n\nconst mapDispatchToProps = (dispatch, { intl }) => ({\n\n  onChange (path, checked) {\n    if (path[0] === 'push') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changePushNotifications(path.slice(1), checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changePushNotifications(path.slice(1), checked));\n      }\n    } else if (path[0] === 'quickFilter') {\n      dispatch(changeSetting(['notifications', ...path], checked));\n      dispatch(setFilter('all'));\n    } else if (path[0] === 'alerts' && checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changeSetting(['notifications', ...path], checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changeSetting(['notifications', ...path], checked));\n      }\n    } else {\n      dispatch(changeSetting(['notifications', ...path], checked));\n    }\n  },\n\n  onClear () {\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.clearMessage),\n        confirm: intl.formatMessage(messages.clearConfirm),\n        onConfirm: () => dispatch(clearNotifications()),\n      },\n    }));\n  },\n\n  onRequestNotificationPermission () {\n    dispatch(requestBrowserPermission());\n  },\n\n  onChangePolicy (param, checked) {\n    dispatch(updateNotificationsPolicy({\n      [param]: checked,\n    }));\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ColumnSettings));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport HomeIcon from '@/material-icons/400-24px/home-fill.svg?react';\nimport InsertChartIcon from '@/material-icons/400-24px/insert_chart.svg?react';\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\n\nconst tooltips = defineMessages({\n  mentions: { id: 'notifications.filter.mentions', defaultMessage: 'Mentions' },\n  favourites: { id: 'notifications.filter.favourites', defaultMessage: 'Favorites' },\n  boosts: { id: 'notifications.filter.boosts', defaultMessage: 'Boosts' },\n  polls: { id: 'notifications.filter.polls', defaultMessage: 'Poll results' },\n  follows: { id: 'notifications.filter.follows', defaultMessage: 'Follows' },\n  statuses: { id: 'notifications.filter.statuses', defaultMessage: 'Updates from people you follow' },\n});\n\nclass FilterBar extends PureComponent {\n\n  static propTypes = {\n    selectFilter: PropTypes.func.isRequired,\n    selectedFilter: PropTypes.string.isRequired,\n    advancedMode: PropTypes.bool.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  onClick (notificationType) {\n    return () => this.props.selectFilter(notificationType);\n  }\n\n  render () {\n    const { selectedFilter, advancedMode, intl } = this.props;\n    const renderedElement = !advancedMode ? (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n        >\n          <FormattedMessage\n            id='notifications.filter.mentions'\n            defaultMessage='Mentions'\n          />\n        </button>\n      </div>\n    ) : (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n          title={intl.formatMessage(tooltips.mentions)}\n        >\n          <Icon id='reply-all' icon={ReplyAllIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'favourite' ? 'active' : ''}\n          onClick={this.onClick('favourite')}\n          title={intl.formatMessage(tooltips.favourites)}\n        >\n          <Icon id='star' icon={StarIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'reblog' ? 'active' : ''}\n          onClick={this.onClick('reblog')}\n          title={intl.formatMessage(tooltips.boosts)}\n        >\n          <Icon id='retweet' icon={RepeatIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'poll' ? 'active' : ''}\n          onClick={this.onClick('poll')}\n          title={intl.formatMessage(tooltips.polls)}\n        >\n          <Icon id='tasks' icon={InsertChartIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'status' ? 'active' : ''}\n          onClick={this.onClick('status')}\n          title={intl.formatMessage(tooltips.statuses)}\n        >\n          <Icon id='home' icon={HomeIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'follow' ? 'active' : ''}\n          onClick={this.onClick('follow')}\n          title={intl.formatMessage(tooltips.follows)}\n        >\n          <Icon id='user-plus' icon={PersonAddIcon} />\n        </button>\n      </div>\n    );\n    return renderedElement;\n  }\n\n}\n\nexport default injectIntl(FilterBar);\n","import { connect } from 'react-redux';\n\nimport { setFilter } from '../../../actions/notifications';\nimport FilterBar from '../components/filter_bar';\n\nconst makeMapStateToProps = state => ({\n  selectedFilter: state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  advancedMode: state.getIn(['settings', 'notifications', 'quickFilter', 'advanced']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectFilter (newActiveFilter) {\n    dispatch(setFilter(newActiveFilter));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterBar);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport DoneAllIcon from '@/material-icons/400-24px/done_all.svg?react';\nimport NotificationsIcon from '@/material-icons/400-24px/notifications-fill.svg?react';\nimport { compareId } from 'mastodon/compare_id';\nimport { Icon }  from 'mastodon/components/icon';\nimport { NotSignedInIndicator } from 'mastodon/components/not_signed_in_indicator';\n\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport { submitMarkers } from '../../actions/markers';\nimport {\n  expandNotifications,\n  scrollTopNotifications,\n  loadPending,\n  mountNotifications,\n  unmountNotifications,\n  markNotificationsAsRead,\n} from '../../actions/notifications';\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { LoadGap } from '../../components/load_gap';\nimport ScrollableList from '../../components/scrollable_list';\n\nimport { FilteredNotificationsBanner } from './components/filtered_notifications_banner';\nimport NotificationsPermissionBanner from './components/notifications_permission_banner';\nimport ColumnSettingsContainer from './containers/column_settings_container';\nimport FilterBarContainer from './containers/filter_bar_container';\nimport NotificationContainer from './containers/notification_container';\n\nconst messages = defineMessages({\n  title: { id: 'column.notifications', defaultMessage: 'Notifications' },\n  markAsRead : { id: 'notifications.mark_as_read', defaultMessage: 'Mark every notification as read' },\n});\n\nconst getExcludedTypes = createSelector([\n  state => state.getIn(['settings', 'notifications', 'shows']),\n], (shows) => {\n  return ImmutableList(shows.filter(item => !item).keys());\n});\n\nconst getNotifications = createSelector([\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'show']),\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  getExcludedTypes,\n  state => state.getIn(['notifications', 'items']),\n], (showFilterBar, allowedType, excludedTypes, notifications) => {\n  if (!showFilterBar || allowedType === 'all') {\n    // used if user changed the notification settings after loading the notifications from the server\n    // otherwise a list of notifications will come pre-filtered from the backend\n    // we need to turn it off for FilterBar in order not to block ourselves from seeing a specific category\n    return notifications.filterNot(item => item !== null && excludedTypes.includes(item.get('type')));\n  }\n  return notifications.filter(item => item === null || allowedType === item.get('type'));\n});\n\nconst mapStateToProps = state => ({\n  notifications: getNotifications(state),\n  isLoading: state.getIn(['notifications', 'isLoading'], 0) > 0,\n  isUnread: state.getIn(['notifications', 'unread']) > 0 || state.getIn(['notifications', 'pendingItems']).size > 0,\n  hasMore: state.getIn(['notifications', 'hasMore']),\n  numPending: state.getIn(['notifications', 'pendingItems'], ImmutableList()).size,\n  lastReadId: state.getIn(['settings', 'notifications', 'showUnread']) ? state.getIn(['notifications', 'readMarkerId']) : '0',\n  canMarkAsRead: state.getIn(['settings', 'notifications', 'showUnread']) && state.getIn(['notifications', 'readMarkerId']) !== '0' && getNotifications(state).some(item => item !== null && compareId(item.get('id'), state.getIn(['notifications', 'readMarkerId'])) > 0),\n  needsNotificationPermission: state.getIn(['settings', 'notifications', 'alerts']).includes(true) && state.getIn(['notifications', 'browserSupport']) && state.getIn(['notifications', 'browserPermission']) === 'default' && !state.getIn(['settings', 'notifications', 'dismissPermissionBanner']),\n});\n\nclass Notifications extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    columnId: PropTypes.string,\n    notifications: ImmutablePropTypes.list.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool,\n    isUnread: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    numPending: PropTypes.number,\n    lastReadId: PropTypes.string,\n    canMarkAsRead: PropTypes.bool,\n    needsNotificationPermission: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    trackScroll: true,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(mountNotifications());\n  }\n\n  componentWillUnmount () {\n    this.handleLoadOlder.cancel();\n    this.handleScrollToTop.cancel();\n    this.handleScroll.cancel();\n    this.props.dispatch(scrollTopNotifications(false));\n    this.props.dispatch(unmountNotifications());\n  }\n\n  handleLoadGap = (maxId) => {\n    this.props.dispatch(expandNotifications({ maxId }));\n  };\n\n  handleLoadOlder = debounce(() => {\n    const last = this.props.notifications.last();\n    this.props.dispatch(expandNotifications({ maxId: last && last.get('id') }));\n  }, 300, { leading: true });\n\n  handleLoadPending = () => {\n    this.props.dispatch(loadPending());\n  };\n\n  handleScrollToTop = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(true));\n  }, 100);\n\n  handleScroll = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(false));\n  }, 100);\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('NOTIFICATIONS', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleMoveUp = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) - 1;\n    this._selectChild(elementIndex, true);\n  };\n\n  handleMoveDown = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) + 1;\n    this._selectChild(elementIndex, false);\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.column.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleMarkAsRead = () => {\n    this.props.dispatch(markNotificationsAsRead());\n    this.props.dispatch(submitMarkers({ immediate: true }));\n  };\n\n  render () {\n    const { intl, notifications, isLoading, isUnread, columnId, multiColumn, hasMore, numPending, lastReadId, canMarkAsRead, needsNotificationPermission } = this.props;\n    const pinned = !!columnId;\n    const emptyMessage = <FormattedMessage id='empty_column.notifications' defaultMessage=\"You don't have any notifications yet. When other people interact with you, you will see it here.\" />;\n    const { signedIn } = this.context.identity;\n\n    let scrollableContent = null;\n\n    const filterBarContainer = signedIn\n      ? (<FilterBarContainer />)\n      : null;\n\n    if (isLoading && this.scrollableContent) {\n      scrollableContent = this.scrollableContent;\n    } else if (notifications.size > 0 || hasMore) {\n      scrollableContent = notifications.map((item, index) => item === null ? (\n        <LoadGap\n          key={'gap:' + notifications.getIn([index + 1, 'id'])}\n          disabled={isLoading}\n          maxId={index > 0 ? notifications.getIn([index - 1, 'id']) : null}\n          onClick={this.handleLoadGap}\n        />\n      ) : (\n        <NotificationContainer\n          key={item.get('id')}\n          notification={item}\n          accountId={item.get('account')}\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          unread={lastReadId !== '0' && compareId(item.get('id'), lastReadId) > 0}\n        />\n      ));\n    } else {\n      scrollableContent = null;\n    }\n\n    this.scrollableContent = scrollableContent;\n\n    let scrollContainer;\n\n    if (signedIn) {\n      scrollContainer = (\n        <ScrollableList\n          scrollKey={`notifications-${columnId}`}\n          trackScroll={!pinned}\n          isLoading={isLoading}\n          showLoading={isLoading && notifications.size === 0}\n          hasMore={hasMore}\n          numPending={numPending}\n          prepend={needsNotificationPermission && <NotificationsPermissionBanner />}\n          alwaysPrepend\n          emptyMessage={emptyMessage}\n          onLoadMore={this.handleLoadOlder}\n          onLoadPending={this.handleLoadPending}\n          onScrollToTop={this.handleScrollToTop}\n          onScroll={this.handleScroll}\n          bindToDocument={!multiColumn}\n        >\n          {scrollableContent}\n        </ScrollableList>\n      );\n    } else {\n      scrollContainer = <NotSignedInIndicator />;\n    }\n\n    let extraButton = null;\n\n    if (canMarkAsRead) {\n      extraButton = (\n        <button\n          aria-label={intl.formatMessage(messages.markAsRead)}\n          title={intl.formatMessage(messages.markAsRead)}\n          onClick={this.handleMarkAsRead}\n          className='column-header__button'\n        >\n          <Icon id='done-all' icon={DoneAllIcon} />\n        </button>\n      );\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.title)}>\n        <ColumnHeader\n          icon='bell'\n          iconComponent={NotificationsIcon}\n          active={isUnread}\n          title={intl.formatMessage(messages.title)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          extraButton={extraButton}\n        >\n          <ColumnSettingsContainer />\n        </ColumnHeader>\n\n        {filterBarContainer}\n\n        <FilteredNotificationsBanner />\n\n        {scrollContainer}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Notifications));\n"],"sourceRoot":""}