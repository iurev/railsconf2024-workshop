{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/ui/components/compare_history_modal.jsx"],"names":["CompareHistoryModal","PureComponent","render","index","versions","language","onClose","this","props","currentVersion","get","emojiMap","reduce","obj","emoji","concat","toJS","content","__html","emojify","spoilerContent","escapeTextContentForBrowser","formattedDate","_jsx","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","FormattedMessage","id","defaultMessage","values","name","date","className","IconButton","icon","iconComponent","CloseIcon","onClick","size","length","_jsxs","_Fragment","children","dangerouslySetInnerHTML","lang","getIn","map","option","MediaAttachments","status","connect","mapStateToProps","state","_ref","statusId","dispatch","closeModal","modalType","undefined","ignoreFocus"],"mappings":"0NAkCA,MAAMA,UAA4BC,gBAUhCC,SACE,MAAM,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,GAAYC,KAAKC,MAC9CC,EAAiBL,EAASM,IAAIP,GAE9BQ,EAAWF,EAAeC,IAAI,UAAUE,QAAO,CAACC,EAAKC,KACzDD,EAAI,IAADE,OAAKD,EAAMJ,IAAI,aAAY,MAAOI,EAAME,OACpCH,IACN,CAAC,GAEEI,EAAU,CAAEC,OAAQC,YAAQV,EAAeC,IAAI,WAAYC,IAC3DS,EAAiB,CAAEF,OAAQC,YAAQE,IAA4BZ,EAAeC,IAAI,iBAAkBC,IAEpGW,EAAgBC,YAACC,IAAiB,CAACC,UAAWhB,EAAeC,IAAI,cAAegB,OAAO,IACvFC,EAAgBJ,YAACK,IAAa,CAACC,UAAWpB,EAAeC,IAAI,aAE7DoB,EAAQrB,EAAeC,IAAI,YAC/Ba,YAACQ,IAAgB,CAACC,GAAE,yBAA0BC,eAAe,wBAAwBC,OAAQ,CAAEC,KAAMR,EAAeS,KAAMd,KAE1HC,YAACQ,IAAgB,CAACC,GAAE,wBAAyBC,eAAe,uBAAuBC,OAAQ,CAAEC,KAAMR,EAAeS,KAAMd,KAG1H,OACEC,YAAA,OAAKc,UAAU,gDAAyC,EACtDd,YAAA,OAAKc,UAAU,6BAAsB,EACnCd,YAACe,IAAU,CAACD,UAAU,sBAAsBE,KAAK,QAAQC,cAAeC,IAAWC,QAASpC,EAASqC,KAAM,KAC1Gb,GAGHP,YAAA,OAAKc,UAAU,yCAAkC,EAC/Cd,YAAA,OAAKc,UAAU,wBAAiB,EAC7B5B,EAAeC,IAAI,gBAAgBkC,OAAS,GAC3CC,eAAAC,WAAA,CAAAC,SAAA,CACExB,YAAA,OAAKc,UAAU,YAAYW,wBAAyB5B,EAAgB6B,KAAM5C,IAC1EkB,YAAA,YAIJA,YAAA,OAAKc,UAAU,iEAAiEW,wBAAyB/B,EAASgC,KAAM5C,MAErHI,EAAeC,IAAI,SACpBa,YAAA,OAAKc,UAAU,aAAM,EACnBd,YAAA,eACGd,EAAeyC,MAAM,CAAC,OAAQ,YAAYC,KAAIC,GAC7C7B,YAAA,QAAS6B,EAAO1C,IAAI,SAClBa,YAAA,QAAMc,UAAU,yBAEhBd,YAAA,QACEc,UAAU,+BACVW,wBAAyB,CAAE9B,OAAQC,YAAQE,IAA4B+B,EAAO1C,IAAI,UAAWC,IAC7FsC,KAAM5C,SAQlBkB,YAAC8B,IAAgB,CAACC,OAAQ7C,EAAgBwC,KAAM5C,MAK1D,EAIakD,6BA5FSC,CAACC,EAAKC,KAAA,IAAE,SAAEC,GAAUD,EAAA,MAAM,CAChDrD,SAAUoD,EAAMP,MAAM,CAAC,WAAYS,EAAU,aAC7CvD,SAAUqD,EAAMP,MAAM,CAAC,UAAWS,EAAU,UAC7C,IAE0BC,IAAQ,CAEjCtD,UACEsD,EAASC,YAAW,CAClBC,eAAWC,EACXC,aAAa,IAEjB,KAgFaT,CAA6CvD,E","file":"js/modals/compare_history_modal-65dc04123ee325104d19.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport escapeTextContentForBrowser from 'escape-html';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport { closeModal } from 'mastodon/actions/modal';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport MediaAttachments from 'mastodon/components/media_attachments';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\nimport emojify from 'mastodon/features/emoji/emoji';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  language: state.getIn(['statuses', statusId, 'language']),\n  versions: state.getIn(['history', statusId, 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClose() {\n    dispatch(closeModal({\n      modalType: undefined,\n      ignoreFocus: false,\n    }));\n  },\n\n});\n\nclass CompareHistoryModal extends PureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    statusId: PropTypes.string.isRequired,\n    language: PropTypes.string.isRequired,\n    versions: ImmutablePropTypes.list.isRequired,\n  };\n\n  render () {\n    const { index, versions, language, onClose } = this.props;\n    const currentVersion = versions.get(index);\n\n    const emojiMap = currentVersion.get('emojis').reduce((obj, emoji) => {\n      obj[`:${emoji.get('shortcode')}:`] = emoji.toJS();\n      return obj;\n    }, {});\n\n    const content = { __html: emojify(currentVersion.get('content'), emojiMap) };\n    const spoilerContent = { __html: emojify(escapeTextContentForBrowser(currentVersion.get('spoiler_text')), emojiMap) };\n\n    const formattedDate = <RelativeTimestamp timestamp={currentVersion.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={currentVersion.get('account')} />;\n\n    const label = currentVersion.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <div className='modal-root__modal compare-history-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' icon='times' iconComponent={CloseIcon} onClick={onClose} size={20} />\n          {label}\n        </div>\n\n        <div className='compare-history-modal__container'>\n          <div className='status__content'>\n            {currentVersion.get('spoiler_text').length > 0 && (\n              <>\n                <div className='translate' dangerouslySetInnerHTML={spoilerContent} lang={language} />\n                <hr />\n              </>\n            )}\n\n            <div className='status__content__text status__content__text--visible translate' dangerouslySetInnerHTML={content} lang={language} />\n\n            {!!currentVersion.get('poll') && (\n              <div className='poll'>\n                <ul>\n                  {currentVersion.getIn(['poll', 'options']).map(option => (\n                    <li key={option.get('title')}>\n                      <span className='poll__input disabled' />\n\n                      <span\n                        className='poll__option__text translate'\n                        dangerouslySetInnerHTML={{ __html: emojify(escapeTextContentForBrowser(option.get('title')), emojiMap) }}\n                        lang={language}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            <MediaAttachments status={currentVersion} lang={language} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompareHistoryModal);\n"],"sourceRoot":""}