{"version":3,"sources":["webpack:///./app/javascript/mastodon/components/check_box.tsx","webpack:///./app/javascript/mastodon/features/ui/components/mute_modal.jsx"],"names":["CheckBox","_ref","name","value","checked","onChange","label","_jsx","className","type","classNames","Icon","id","icon","DoneIcon","messages","defineMessages","minutes","defaultMessage","hours","days","indefinite","hideFromNotifications","RadioButtonLabel","currentValue","RadioButton","MuteModal","_ref2","accountId","acct","intl","useIntl","dispatch","useDispatch","notifications","setNotifications","useState","muteDuration","setMuteDuration","expanded","setExpanded","handleClick","useCallback","closeModal","modalType","undefined","ignoreFocus","muteAccount","handleCancel","handleToggleNotifications","_ref3","target","handleChangeMuteDuration","_ref4","handleToggleSettings","VolumeOffIcon","FormattedMessage","CampaignIcon","VisibilityOffIcon","AlternateEmailIcon","ReplyIcon","active","formatMessage","number","onClick","Button"],"mappings":"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","file":"js/modals/mute_modal-2cca7f6a9b8edd642abf.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport DoneIcon from '@/material-icons/400-24px/done.svg?react';\n\nimport { Icon } from './icon';\n\ninterface Props {\n  value: string;\n  checked: boolean;\n  name: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  label: React.ReactNode;\n}\n\nexport const CheckBox: React.FC<Props> = ({\n  name,\n  value,\n  checked,\n  onChange,\n  label,\n}) => {\n  return (\n    <label className='check-box'>\n      <input\n        name={name}\n        type='checkbox'\n        value={value}\n        checked={checked}\n        onChange={onChange}\n      />\n\n      <span className={classNames('check-box__input', { checked })}>\n        {checked && <Icon id='check' icon={DoneIcon} />}\n      </span>\n\n      <span>{label}</span>\n    </label>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useCallback, useState } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { useDispatch } from 'react-redux';\n\n\nimport AlternateEmailIcon from '@/material-icons/400-24px/alternate_email.svg?react';\nimport CampaignIcon from '@/material-icons/400-24px/campaign.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport VolumeOffIcon from '@/material-icons/400-24px/volume_off.svg?react';\nimport { muteAccount } from 'mastodon/actions/accounts';\nimport { closeModal } from 'mastodon/actions/modal';\nimport { Button } from 'mastodon/components/button';\nimport { CheckBox } from 'mastodon/components/check_box';\nimport { Icon } from 'mastodon/components/icon';\nimport { RadioButton } from 'mastodon/components/radio_button';\n\nconst messages = defineMessages({\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n  indefinite: { id: 'mute_modal.indefinite', defaultMessage: 'Until I unmute them' },\n  hideFromNotifications: { id: 'mute_modal.hide_from_notifications', defaultMessage: 'Hide from notifications' },\n});\n\nconst RadioButtonLabel = ({ name, value, currentValue, onChange, label }) => (\n  <RadioButton\n    name={name}\n    value={value}\n    checked={value === currentValue}\n    onChange={onChange}\n    label={label}\n  />\n);\n\nRadioButtonLabel.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.oneOf([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  currentValue: PropTypes.oneOf([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  label: PropTypes.node,\n};\n\nexport const MuteModal = ({ accountId, acct }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [notifications, setNotifications] = useState(true);\n  const [muteDuration, setMuteDuration] = useState('0');\n  const [expanded, setExpanded] = useState(false);\n\n  const handleClick = useCallback(() => {\n    dispatch(closeModal({ modalType: undefined, ignoreFocus: false }));\n    dispatch(muteAccount(accountId, notifications, muteDuration));\n  }, [dispatch, accountId, notifications, muteDuration]);\n\n  const handleCancel = useCallback(() => {\n    dispatch(closeModal({ modalType: undefined, ignoreFocus: false }));\n  }, [dispatch]);\n\n  const handleToggleNotifications = useCallback(({ target }) => {\n    setNotifications(target.checked);\n  }, [setNotifications]);\n\n  const handleChangeMuteDuration = useCallback(({ target }) => {\n    setMuteDuration(target.value);\n  }, [setMuteDuration]);\n\n  const handleToggleSettings = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  return (\n    <div className='modal-root__modal safety-action-modal'>\n      <div className='safety-action-modal__top'>\n        <div className='safety-action-modal__header'>\n          <div className='safety-action-modal__header__icon'>\n            <Icon icon={VolumeOffIcon} />\n          </div>\n\n          <div>\n            <h1><FormattedMessage id='mute_modal.title' defaultMessage='Mute user?' /></h1>\n            <div>@{acct}</div>\n          </div>\n        </div>\n\n        <div className='safety-action-modal__bullet-points'>\n          <div>\n            <div className='safety-action-modal__bullet-points__icon'><Icon icon={CampaignIcon} /></div>\n            <div><FormattedMessage id='mute_modal.they_wont_know' defaultMessage=\"They won't know they've been muted.\" /></div>\n          </div>\n\n          <div>\n            <div className='safety-action-modal__bullet-points__icon'><Icon icon={VisibilityOffIcon} /></div>\n            <div><FormattedMessage id='mute_modal.you_wont_see_posts' defaultMessage=\"They can still see your posts, but you won't see theirs.\" /></div>\n          </div>\n\n          <div>\n            <div className='safety-action-modal__bullet-points__icon'><Icon icon={AlternateEmailIcon} /></div>\n            <div><FormattedMessage id='mute_modal.you_wont_see_mentions' defaultMessage=\"You won't see posts that mention them.\" /></div>\n          </div>\n\n          <div>\n            <div className='safety-action-modal__bullet-points__icon'><Icon icon={ReplyIcon} /></div>\n            <div><FormattedMessage id='mute_modal.they_can_mention_and_follow' defaultMessage=\"They can mention and follow you, but you won't see them.\" /></div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classNames('safety-action-modal__bottom', { active: expanded })}>\n        <div className='safety-action-modal__bottom__collapsible'>\n          <div className='safety-action-modal__field-group'>\n            <RadioButtonLabel name='duration' value='0' label={intl.formatMessage(messages.indefinite)} currentValue={muteDuration} onChange={handleChangeMuteDuration} />\n            <RadioButtonLabel name='duration' value='86400' label={intl.formatMessage(messages.hours, { number: 24 })} currentValue={muteDuration} onChange={handleChangeMuteDuration} />\n            <RadioButtonLabel name='duration' value='604800' label={intl.formatMessage(messages.days, { number: 7 })} currentValue={muteDuration} onChange={handleChangeMuteDuration} />\n            <RadioButtonLabel name='duration' value='2592000' label={intl.formatMessage(messages.days, { number: 30 })} currentValue={muteDuration} onChange={handleChangeMuteDuration} />\n          </div>\n\n          <div className='safety-action-modal__field-group'>\n            <CheckBox label={intl.formatMessage(messages.hideFromNotifications)} checked={notifications} onChange={handleToggleNotifications} />\n          </div>\n        </div>\n\n        <div className='safety-action-modal__actions'>\n          <button onClick={handleToggleSettings} className='link-button'>\n            {expanded ? <FormattedMessage id='mute_modal.hide_options' defaultMessage='Hide options' /> : <FormattedMessage id='mute_modal.show_options' defaultMessage='Show options' />}\n          </button>\n\n          <div className='spacer' />\n\n          <button onClick={handleCancel} className='link-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </button>\n\n          <Button onClick={handleClick}>\n            <FormattedMessage id='confirmations.mute.confirm' defaultMessage='Mute' />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMuteModal.propTypes = {\n  accountId: PropTypes.string.isRequired,\n  acct: PropTypes.string.isRequired,\n};\n\nexport default MuteModal;\n"],"sourceRoot":""}