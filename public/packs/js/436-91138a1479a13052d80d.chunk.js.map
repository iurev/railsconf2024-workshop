{"version":3,"sources":["webpack:///./app/javascript/mastodon/components/admin/Trends.jsx"],"names":["Trends","PureComponent","constructor","arguments","_defineProperty","loading","data","componentDidMount","limit","this","props","api","get","params","then","res","setState","catch","err","console","error","render","state","content","_jsx","Array","from","map","_","i","Hashtag","hashtag","name","to","undefined","id","concat","people","history","accounts","uses","reverse","day","className","classNames","requires_review","trendable","FormattedMessage","defaultMessage"],"mappings":"sNAUe,MAAMA,UAAeC,gBAAcC,cAAA,SAAAC,WAAAC,YAAA,aAMxC,CACNC,SAAS,EACTC,KAAM,MACP,CAEDC,oBACE,MAAM,MAAEC,GAAUC,KAAKC,MAEvBC,cAAMC,IAAI,4BAA6B,CAAEC,OAAQ,CAAEL,WAAWM,MAAKC,IACjEN,KAAKO,SAAS,CACZX,SAAS,EACTC,KAAMS,EAAIT,MACV,IACDW,OAAMC,IACPC,QAAQC,MAAMF,EAAI,GAEtB,CAEAG,SACE,MAAM,MAAEb,GAAUC,KAAKC,OACjB,QAAEL,EAAO,KAAEC,GAASG,KAAKa,MAE/B,IAAIC,EA4BJ,OAzBEA,EADElB,EAEAmB,YAAA,gBACGC,MAAMC,KAAKD,MAAMjB,IAAQmB,KAAI,CAACC,EAAGC,IAChCL,YAACM,IAAO,GAAMD,MAMlBL,YAAA,gBACGlB,EAAKqB,KAAII,GACRP,YAACM,IAAO,CAENE,KAAMD,EAAQC,KACdC,QAAmBC,IAAfH,EAAQI,QAAmBD,EAAS,eAAAE,OAAkBL,EAAQI,IAClEE,OAAsC,EAA9BN,EAAQO,QAAQ,GAAGC,SAA6C,EAA9BR,EAAQO,QAAQ,GAAGC,SAC7DC,KAAgC,EAA1BT,EAAQO,QAAQ,GAAGE,KAAqC,EAA1BT,EAAQO,QAAQ,GAAGE,KACvDF,QAASP,EAAQO,QAAQG,UAAUd,KAAIe,GAAOA,EAAIF,OAClDG,UAAWC,IAAWb,EAAQc,iBAAmB,iCAAkCd,EAAQe,YAAcf,EAAQc,iBAAmB,2BAN/Hd,EAAQC,SAcrBR,YAAA,OAAKmB,UAAU,+BAAwB,EACrCnB,YAAA,eAAIA,YAACuB,IAAgB,CAACZ,GAAE,sBAAuBa,eAAe,kBAE7DzB,EAGP,E","file":"js/436-91138a1479a13052d80d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport api from 'mastodon/api';\nimport { Hashtag } from 'mastodon/components/hashtag';\n\nexport default class Trends extends PureComponent {\n\n  static propTypes = {\n    limit: PropTypes.number.isRequired,\n  };\n\n  state = {\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount () {\n    const { limit } = this.props;\n\n    api().get('/api/v1/admin/trends/tags', { params: { limit } }).then(res => {\n      this.setState({\n        loading: false,\n        data: res.data,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render () {\n    const { limit } = this.props;\n    const { loading, data } = this.state;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <div>\n          {Array.from(Array(limit)).map((_, i) => (\n            <Hashtag key={i} />\n          ))}\n        </div>\n      );\n    } else {\n      content = (\n        <div>\n          {data.map(hashtag => (\n            <Hashtag\n              key={hashtag.name}\n              name={hashtag.name}\n              to={hashtag.id === undefined ? undefined : `/admin/tags/${hashtag.id}`}\n              people={hashtag.history[0].accounts * 1 + hashtag.history[1].accounts * 1}\n              uses={hashtag.history[0].uses * 1 + hashtag.history[1].uses * 1}\n              history={hashtag.history.reverse().map(day => day.uses)}\n              className={classNames(hashtag.requires_review && 'trends__item--requires-review', !hashtag.trendable && !hashtag.requires_review && 'trends__item--disabled')}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div className='trends trends--compact'>\n        <h4><FormattedMessage id='trends.trending_now' defaultMessage='Trending now' /></h4>\n\n        {content}\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}