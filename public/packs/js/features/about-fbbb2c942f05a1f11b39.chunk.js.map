{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/expand_more.svg","webpack:///./app/javascript/mastodon/features/about/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","messages","defineMessages","defaultMessage","rules","blocks","silenced","silencedExplanation","suspended","suspendedExplanation","severityMessages","silence","explanation","suspend","Section","PureComponent","constructor","_defineProperty","collapsed","open","onOpen","state","setState","render","children","_jsx","className","classNames","active","role","tabIndex","onClick","handleClick","Icon","icon","ChevronRightIcon","ExpandMoreIcon","About","dispatch","fetchDomainBlocks","componentDidMount","fetchServer","fetchExtendedDescription","_server$getIn","_extendedDescription$","multiColumn","intl","server","extendedDescription","domainBlocks","isLoading","get","Column","bindToDocument","label","formatMessage","ServerHeroImage","blurhash","getIn","src","srcSet","map","value","concat","replace","join","Skeleton","FormattedMessage","values","mastodon","href","Account","size","minimal","_jsxs","_Fragment","dangerouslySetInnerHTML","__html","ImmutableList","isEmpty","rule","handleDomainBlocksOpen","block","LinkFooter","Helmet","name","content","connect","injectIntl"],"mappings":"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","file":"js/features/about-fbbb2c942f05a1f11b39.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgExpandMore(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\"\n  })));\n}\nexport default SvgExpandMore;","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport ExpandMoreIcon from '@/material-icons/400-24px/expand_more.svg?react';\nimport { fetchServer, fetchExtendedDescription, fetchDomainBlocks  } from 'mastodon/actions/server';\nimport Column from 'mastodon/components/column';\nimport { Icon  }  from 'mastodon/components/icon';\nimport { ServerHeroImage } from 'mastodon/components/server_hero_image';\nimport { Skeleton } from 'mastodon/components/skeleton';\nimport Account from 'mastodon/containers/account_container';\nimport LinkFooter from 'mastodon/features/ui/components/link_footer';\n\nconst messages = defineMessages({\n  title: { id: 'column.about', defaultMessage: 'About' },\n  rules: { id: 'about.rules', defaultMessage: 'Server rules' },\n  blocks: { id: 'about.blocks', defaultMessage: 'Moderated servers' },\n  silenced: { id: 'about.domain_blocks.silenced.title', defaultMessage: 'Limited' },\n  silencedExplanation: { id: 'about.domain_blocks.silenced.explanation', defaultMessage: 'You will generally not see profiles and content from this server, unless you explicitly look it up or opt into it by following.' },\n  suspended: { id: 'about.domain_blocks.suspended.title', defaultMessage: 'Suspended' },\n  suspendedExplanation: { id: 'about.domain_blocks.suspended.explanation', defaultMessage: 'No data from this server will be processed, stored or exchanged, making any interaction or communication with users from this server impossible.' },\n});\n\nconst severityMessages = {\n  silence: {\n    title: messages.silenced,\n    explanation: messages.silencedExplanation,\n  },\n\n  suspend: {\n    title: messages.suspended,\n    explanation: messages.suspendedExplanation,\n  },\n};\n\nconst mapStateToProps = state => ({\n  server: state.getIn(['server', 'server']),\n  extendedDescription: state.getIn(['server', 'extendedDescription']),\n  domainBlocks: state.getIn(['server', 'domainBlocks']),\n});\n\nclass Section extends PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n    open: PropTypes.bool,\n    onOpen: PropTypes.func,\n  };\n\n  state = {\n    collapsed: !this.props.open,\n  };\n\n  handleClick = () => {\n    const { onOpen } = this.props;\n    const { collapsed } = this.state;\n\n    this.setState({ collapsed: !collapsed }, () => onOpen && onOpen());\n  };\n\n  render () {\n    const { title, children } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <div className={classNames('about__section', { active: !collapsed })}>\n        <div className='about__section__title' role='button' tabIndex={0} onClick={this.handleClick}>\n          <Icon id={collapsed ? 'chevron-right' : 'chevron-down'} icon={collapsed ? ChevronRightIcon : ExpandMoreIcon} /> {title}\n        </div>\n\n        {!collapsed && (\n          <div className='about__section__body'>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nclass About extends PureComponent {\n\n  static propTypes = {\n    server: ImmutablePropTypes.map,\n    extendedDescription: ImmutablePropTypes.map,\n    domainBlocks: ImmutablePropTypes.contains({\n      isLoading: PropTypes.bool,\n      isAvailable: PropTypes.bool,\n      items: ImmutablePropTypes.list,\n    }),\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(fetchServer());\n    dispatch(fetchExtendedDescription());\n  }\n\n  handleDomainBlocksOpen = () => {\n    const { dispatch } = this.props;\n    dispatch(fetchDomainBlocks());\n  };\n\n  render () {\n    const { multiColumn, intl, server, extendedDescription, domainBlocks } = this.props;\n    const isLoading = server.get('isLoading');\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.title)}>\n        <div className='scrollable about'>\n          <div className='about__header'>\n            <ServerHeroImage blurhash={server.getIn(['thumbnail', 'blurhash'])} src={server.getIn(['thumbnail', 'url'])} srcSet={server.getIn(['thumbnail', 'versions'])?.map((value, key) => `${value} ${key.replace('@', '')}`).join(', ')} className='about__header__hero' />\n            <h1>{isLoading ? <Skeleton width='10ch' /> : server.get('domain')}</h1>\n            <p><FormattedMessage id='about.powered_by' defaultMessage='Decentralized social media powered by {mastodon}' values={{ mastodon: <a href='https://joinmastodon.org' className='about__mail' target='_blank'>Mastodon</a> }} /></p>\n          </div>\n\n          <div className='about__meta'>\n            <div className='about__meta__column'>\n              <h4><FormattedMessage id='server_banner.administered_by' defaultMessage='Administered by:' /></h4>\n\n              <Account id={server.getIn(['contact', 'account', 'id'])} size={36} minimal />\n            </div>\n\n            <hr className='about__meta__divider' />\n\n            <div className='about__meta__column'>\n              <h4><FormattedMessage id='about.contact' defaultMessage='Contact:' /></h4>\n\n              {isLoading ? <Skeleton width='10ch' /> : <a className='about__mail' href={`mailto:${server.getIn(['contact', 'email'])}`}>{server.getIn(['contact', 'email'])}</a>}\n            </div>\n          </div>\n\n          <Section open title={intl.formatMessage(messages.title)}>\n            {extendedDescription.get('isLoading') ? (\n              <>\n                <Skeleton width='100%' />\n                <br />\n                <Skeleton width='100%' />\n                <br />\n                <Skeleton width='100%' />\n                <br />\n                <Skeleton width='70%' />\n              </>\n            ) : (extendedDescription.get('content')?.length > 0 ? (\n              <div\n                className='prose'\n                dangerouslySetInnerHTML={{ __html: extendedDescription.get('content') }}\n              />\n            ) : (\n              <p><FormattedMessage id='about.not_available' defaultMessage='This information has not been made available on this server.' /></p>\n            ))}\n          </Section>\n\n          <Section title={intl.formatMessage(messages.rules)}>\n            {!isLoading && (server.get('rules', ImmutableList()).isEmpty() ? (\n              <p><FormattedMessage id='about.not_available' defaultMessage='This information has not been made available on this server.' /></p>\n            ) : (\n              <ol className='rules-list'>\n                {server.get('rules').map(rule => (\n                  <li key={rule.get('id')}>\n                    <div className='rules-list__text'>{rule.get('text')}</div>\n                    {rule.get('hint').length > 0 && (<div className='rules-list__hint'>{rule.get('hint')}</div>)}\n                  </li>\n                ))}\n              </ol>\n            ))}\n          </Section>\n\n          <Section title={intl.formatMessage(messages.blocks)} onOpen={this.handleDomainBlocksOpen}>\n            {domainBlocks.get('isLoading') ? (\n              <>\n                <Skeleton width='100%' />\n                <br />\n                <Skeleton width='70%' />\n              </>\n            ) : (domainBlocks.get('isAvailable') ? (\n              <>\n                <p><FormattedMessage id='about.domain_blocks.preamble' defaultMessage='Mastodon generally allows you to view content from and interact with users from any other server in the fediverse. These are the exceptions that have been made on this particular server.' /></p>\n\n                {domainBlocks.get('items').size > 0 && (\n                  <div className='about__domain-blocks'>\n                    {domainBlocks.get('items').map(block => (\n                      <div className='about__domain-blocks__domain' key={block.get('domain')}>\n                        <div className='about__domain-blocks__domain__header'>\n                          <h6><span title={`SHA-256: ${block.get('digest')}`}>{block.get('domain')}</span></h6>\n                          <span className='about__domain-blocks__domain__type' title={intl.formatMessage(severityMessages[block.get('severity')].explanation)}>{intl.formatMessage(severityMessages[block.get('severity')].title)}</span>\n                        </div>\n\n                        <p>{(block.get('comment') || '').length > 0 ? block.get('comment') : <FormattedMessage id='about.domain_blocks.no_reason_available' defaultMessage='Reason not available' />}</p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </>\n            ) : (\n              <p><FormattedMessage id='about.not_available' defaultMessage='This information has not been made available on this server.' /></p>\n            ))}\n          </Section>\n\n          <LinkFooter />\n\n          <div className='about__footer'>\n            <p><FormattedMessage id='about.disclaimer' defaultMessage='Mastodon is free, open-source software, and a trademark of Mastodon gGmbH.' /></p>\n          </div>\n        </div>\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='all' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(About));\n"],"sourceRoot":""}