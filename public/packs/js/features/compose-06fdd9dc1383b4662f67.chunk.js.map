{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/logout.svg","webpack:///./app/javascript/mastodon/features/compose/components/search_results.jsx","webpack:///./app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///./app/javascript/mastodon/features/compose/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","INITIAL_PAGE_LIMIT","withoutLastResult","list","size","skipLast","SearchResults","ImmutablePureComponent","constructor","_defineProperty","expandSearch","render","results","accounts","statuses","hashtags","get","_jsx","SearchSection","_jsxs","_Fragment","children","Icon","icon","PeopleIcon","FormattedMessage","defaultMessage","map","accountId","AccountContainer","LoadMore","visible","onClick","handleLoadMoreAccounts","TagIcon","hashtag","Hashtag","handleLoadMoreHashtags","FindInPageIcon","statusId","StatusContainer","handleLoadMoreStatuses","className","ImmutablePropTypes","isRequired","PropTypes","func","searchTerm","string","connect","state","getIn","suggestions","dispatch","fetchSuggestions","type","dismissSuggestion","account","messages","defineMessages","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","PureComponent","e","intl","preventDefault","stopPropagation","openModal","modalType","modalProps","message","formatMessage","confirm","closeWhenConfirm","onConfirm","logOut","changeComposing","componentDidMount","mountCompose","componentWillUnmount","unmountCompose","multiColumn","showSearch","columns","role","Link","to","MenuIcon","some","column","HomeIcon","NotificationsIcon","PublicIcon","href","SettingsIcon","handleLogoutClick","LogoutIcon","SearchContainer","onFocus","ComposeFormContainer","autoFocus","isMobile","window","innerWidth","alt","draggable","src","mascot","elephantUIPlane","Motion","defaultStyle","x","style","spring","stiffness","damping","transform","concat","visibility","SearchResultsContainer","Column","Helmet","name","content","mapStateToProps","ownProps","injectIntl"],"mappings":"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","file":"js/features/compose-06fdd9dc1383b4662f67.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogout(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h280v80H200Zm440-160-55-58 102-102H360v-80h327L585-622l55-58 200 200-200 200Z\"\n  })));\n}\nexport default SvgLogout;","import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport FindInPageIcon from '@/material-icons/400-24px/find_in_page.svg?react';\nimport PeopleIcon from '@/material-icons/400-24px/group.svg?react';\nimport TagIcon from '@/material-icons/400-24px/tag.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadMore } from 'mastodon/components/load_more';\nimport { SearchSection } from 'mastodon/features/explore/components/search_section';\n\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\n\nconst INITIAL_PAGE_LIMIT = 10;\n\nconst withoutLastResult = list => {\n  if (list.size > INITIAL_PAGE_LIMIT && list.size % INITIAL_PAGE_LIMIT === 1) {\n    return list.skipLast(1);\n  } else {\n    return list;\n  }\n};\n\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n  };\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { results } = this.props;\n\n    let accounts, statuses, hashtags;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      accounts = (\n        <SearchSection title={<><Icon id='users' icon={PeopleIcon} /><FormattedMessage id='search_results.accounts' defaultMessage='Profiles' /></>}>\n          {withoutLastResult(results.get('accounts')).map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n          {(results.get('accounts').size > INITIAL_PAGE_LIMIT && results.get('accounts').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      hashtags = (\n        <SearchSection title={<><Icon id='hashtag' icon={TagIcon} /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></>}>\n          {withoutLastResult(results.get('hashtags')).map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n          {(results.get('hashtags').size > INITIAL_PAGE_LIMIT && results.get('hashtags').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      statuses = (\n        <SearchSection title={<><Icon id='quote-right' icon={FindInPageIcon} /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></>}>\n          {withoutLastResult(results.get('statuses')).map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n          {(results.get('statuses').size > INITIAL_PAGE_LIMIT && results.get('statuses').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </SearchSection>\n      );\n    }\n\n\n    return (\n      <div className='search-results'>\n        {accounts}\n        {hashtags}\n        {statuses}\n      </div>\n    );\n  }\n\n}\n\nexport default SearchResults;\n","import { connect } from 'react-redux';\n\nimport { expandSearch } from 'mastodon/actions/search';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\n\nimport SearchResults from '../components/search_results';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport PeopleIcon from '@/material-icons/400-24px/group.svg?react';\nimport HomeIcon from '@/material-icons/400-24px/home-fill.svg?react';\nimport LogoutIcon from '@/material-icons/400-24px/logout.svg?react';\nimport MenuIcon from '@/material-icons/400-24px/menu.svg?react';\nimport NotificationsIcon from '@/material-icons/400-24px/notifications-fill.svg?react';\nimport PublicIcon from '@/material-icons/400-24px/public.svg?react';\nimport SettingsIcon from '@/material-icons/400-24px/settings-fill.svg?react';\nimport { openModal } from 'mastodon/actions/modal';\nimport Column from 'mastodon/components/column';\nimport { Icon }  from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { mascot } from '../../initial_state';\nimport { isMobile } from '../../is_mobile';\nimport Motion from '../ui/util/optional_motion';\n\nimport ComposeFormContainer from './containers/compose_form_container';\nimport SearchContainer from './containers/search_container';\nimport SearchResultsContainer from './containers/search_results_container';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nclass Compose extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.logoutMessage),\n        confirm: intl.formatMessage(messages.logoutConfirm),\n        closeWhenConfirm: false,\n        onConfirm: () => logOut(),\n      },\n    }));\n\n    return false;\n  };\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  };\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' icon={MenuIcon} /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' icon={HomeIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' icon={NotificationsIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' icon={PeopleIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' icon={PublicIcon} /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' icon={SettingsIcon} /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' icon={LogoutIcon} /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <ComposeFormContainer autoFocus={!isMobile(window.innerWidth)} />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResultsContainer />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Compose));\n"],"sourceRoot":""}