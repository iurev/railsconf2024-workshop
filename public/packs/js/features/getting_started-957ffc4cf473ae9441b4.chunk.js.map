{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/getting_started/index.jsx"],"names":["messages","defineMessages","home_timeline","id","defaultMessage","notifications","public_timeline","settings_subheading","community_timeline","explore","direct","bookmarks","preferences","follow_requests","favourites","blocks","domain_blocks","mutes","pins","lists","discover","personal","security","menu","GettingStarted","ImmutablePureComponent","componentDidMount","fetchFollowRequests","this","props","signedIn","context","identity","render","intl","myAccount","multiColumn","unreadFollowRequests","navItems","badgeDisplay","number","limit","push","_jsx","ColumnSubheading","text","formatMessage","showTrends","ColumnLink","icon","iconComponent","ExploreIcon","to","PeopleIcon","PublicIcon","HomeIcon","AlternateEmailIcon","BookmarksIcon","StarIcon","ListAltIcon","get","PersonAddIcon","badge","concat","SettingsIcon","href","Column","NavigationBar","ColumnHeader","title","MenuIcon","className","LinkFooter","TrendsContainer","Helmet","name","content","_defineProperty","PropTypes","object","isRequired","ImmutablePropTypes","record","bool","func","unreadNotifications","connect","state","getIn","me","ImmutableList","size","dispatch","injectIntl"],"mappings":"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","file":"js/features/getting_started-957ffc4cf473ae9441b4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport AlternateEmailIcon from '@/material-icons/400-24px/alternate_email.svg?react';\nimport BookmarksIcon from '@/material-icons/400-24px/bookmarks-fill.svg?react';\nimport ExploreIcon from '@/material-icons/400-24px/explore.svg?react';\nimport PeopleIcon from '@/material-icons/400-24px/group.svg?react';\nimport HomeIcon from '@/material-icons/400-24px/home-fill.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport MenuIcon from '@/material-icons/400-24px/menu.svg?react';\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\nimport PublicIcon from '@/material-icons/400-24px/public.svg?react';\nimport SettingsIcon from '@/material-icons/400-24px/settings-fill.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star.svg?react';\nimport { fetchFollowRequests } from 'mastodon/actions/accounts';\nimport Column from 'mastodon/components/column';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport LinkFooter from 'mastodon/features/ui/components/link_footer';\n\nimport { me, showTrends } from '../../initial_state';\nimport { NavigationBar } from '../compose/components/navigation_bar';\nimport ColumnLink from '../ui/components/column_link';\nimport ColumnSubheading from '../ui/components/column_subheading';\n\nimport TrendsContainer from './containers/trends_container';\n\nconst messages = defineMessages({\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public_timeline: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  settings_subheading: { id: 'column_subheading.settings', defaultMessage: 'Settings' },\n  community_timeline: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  explore: { id: 'navigation_bar.explore', defaultMessage: 'Explore' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Private mentions' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favorites' },\n  blocks: { id: 'navigation_bar.blocks', defaultMessage: 'Blocked users' },\n  domain_blocks: { id: 'navigation_bar.domain_blocks', defaultMessage: 'Blocked domains' },\n  mutes: { id: 'navigation_bar.mutes', defaultMessage: 'Muted users' },\n  pins: { id: 'navigation_bar.pins', defaultMessage: 'Pinned posts' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  discover: { id: 'navigation_bar.discover', defaultMessage: 'Discover' },\n  personal: { id: 'navigation_bar.personal', defaultMessage: 'Personal' },\n  security: { id: 'navigation_bar.security', defaultMessage: 'Security' },\n  menu: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n});\n\nconst mapStateToProps = state => ({\n  myAccount: state.getIn(['accounts', me]),\n  unreadFollowRequests: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFollowRequests: () => dispatch(fetchFollowRequests()),\n});\n\nconst badgeDisplay = (number, limit) => {\n  if (number === 0) {\n    return undefined;\n  } else if (limit && number >= limit) {\n    return `${limit}+`;\n  } else {\n    return number;\n  }\n};\n\nclass GettingStarted extends ImmutablePureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.record,\n    multiColumn: PropTypes.bool,\n    fetchFollowRequests: PropTypes.func.isRequired,\n    unreadFollowRequests: PropTypes.number,\n    unreadNotifications: PropTypes.number,\n  };\n\n  componentDidMount () {\n    const { fetchFollowRequests } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (!signedIn) {\n      return;\n    }\n\n    fetchFollowRequests();\n  }\n\n  render () {\n    const { intl, myAccount, multiColumn, unreadFollowRequests } = this.props;\n    const { signedIn } = this.context.identity;\n\n    const navItems = [];\n\n    navItems.push(\n      <ColumnSubheading key='header-discover' text={intl.formatMessage(messages.discover)} />,\n    );\n\n    if (showTrends) {\n      navItems.push(\n        <ColumnLink key='explore' icon='explore' iconComponent={ExploreIcon} text={intl.formatMessage(messages.explore)} to='/explore' />,\n      );\n    }\n\n    navItems.push(\n      <ColumnLink key='community_timeline' icon='users' iconComponent={PeopleIcon} text={intl.formatMessage(messages.community_timeline)} to='/public/local' />,\n      <ColumnLink key='public_timeline' icon='globe' iconComponent={PublicIcon} text={intl.formatMessage(messages.public_timeline)} to='/public' />,\n    );\n\n    if (signedIn) {\n      navItems.push(\n        <ColumnSubheading key='header-personal' text={intl.formatMessage(messages.personal)} />,\n        <ColumnLink key='home' icon='home' iconComponent={HomeIcon} text={intl.formatMessage(messages.home_timeline)} to='/home' />,\n        <ColumnLink key='direct' icon='at' iconComponent={AlternateEmailIcon} text={intl.formatMessage(messages.direct)} to='/conversations' />,\n        <ColumnLink key='bookmark' icon='bookmarks' iconComponent={BookmarksIcon} text={intl.formatMessage(messages.bookmarks)} to='/bookmarks' />,\n        <ColumnLink key='favourites' icon='star' iconComponent={StarIcon} text={intl.formatMessage(messages.favourites)} to='/favourites' />,\n        <ColumnLink key='lists' icon='list-ul' iconComponent={ListAltIcon} text={intl.formatMessage(messages.lists)} to='/lists' />,\n      );\n\n      if (myAccount.get('locked') || unreadFollowRequests > 0) {\n        navItems.push(<ColumnLink key='follow_requests' icon='user-plus' iconComponent={PersonAddIcon} text={intl.formatMessage(messages.follow_requests)} badge={badgeDisplay(unreadFollowRequests, 40)} to='/follow_requests' />);\n      }\n\n      navItems.push(\n        <ColumnSubheading key='header-settings' text={intl.formatMessage(messages.settings_subheading)} />,\n        <ColumnLink key='preferences' icon='cog' iconComponent={SettingsIcon} text={intl.formatMessage(messages.preferences)} href='/settings/preferences' />,\n      );\n    }\n\n    return (\n      <Column>\n        {(signedIn && !multiColumn) ? <NavigationBar /> : <ColumnHeader title={intl.formatMessage(messages.menu)} icon='bars' iconComponent={MenuIcon} multiColumn={multiColumn} />}\n\n        <div className='getting-started scrollable scrollable--flex'>\n          <div className='getting-started__wrapper'>\n            {navItems}\n          </div>\n\n          {!multiColumn && <div className='flex-spacer' />}\n\n          <LinkFooter multiColumn />\n        </div>\n\n        {(multiColumn && showTrends) && <TrendsContainer />}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.menu)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(GettingStarted));\n"],"sourceRoot":""}