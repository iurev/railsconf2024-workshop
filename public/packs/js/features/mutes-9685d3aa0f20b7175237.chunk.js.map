{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/mutes/index.jsx"],"names":["messages","defineMessages","heading","id","defaultMessage","Mutes","ImmutablePureComponent","constructor","arguments","_defineProperty","_debounce","this","props","dispatch","expandMutes","leading","UNSAFE_componentWillMount","fetchMutes","render","intl","hasMore","accountIds","multiColumn","isLoading","_jsx","Column","LoadingIndicator","emptyMessage","FormattedMessage","bindToDocument","icon","iconComponent","VolumeOffIcon","formatMessage","alwaysShowBackButton","ScrollableList","scrollKey","onLoadMore","handleLoadMore","map","AccountContainer","defaultAction","Helmet","name","content","params","PropTypes","object","isRequired","func","bool","ImmutablePropTypes","list","connect","state","getIn","injectIntl"],"mappings":"sRAoBA,MAAMA,EAAWC,YAAe,CAC9BC,QAAS,CAAEC,GAAG,eAAiBC,eAAe,iBAShD,MAAMC,UAAcC,IAAuBC,cAAA,SAAAC,WAAAC,YAAA,sBAgBxBC,KAAS,KACxBC,KAAKC,MAAMC,SAASC,cAAc,GACjC,IAAK,CAAEC,SAAS,IAAO,CAN1BC,4BACEL,KAAKC,MAAMC,SAASI,cACtB,CAMAC,SACE,MAAM,KAAEC,EAAI,QAAEC,EAAO,WAAEC,EAAU,YAAEC,EAAW,UAAEC,GAAcZ,KAAKC,MAEnE,IAAKS,EACH,OACEG,YAACC,IAAM,UACLD,YAACE,IAAgB,KAKvB,MAAMC,EAAeH,YAACI,IAAgB,CAACzB,GAAE,qBAAsBC,eAAe,qCAE9E,OACEoB,YAACC,IAAM,CAACI,gBAAiBP,EAAaQ,KAAK,aAAaC,cAAeC,IAAe9B,QAASiB,EAAKc,cAAcjC,EAASE,SAAUgC,sBAAoB,UACvJV,YAACW,IAAc,CACbC,UAAU,QACVC,WAAY1B,KAAK2B,eACjBlB,QAASA,EACTG,UAAWA,EACXI,aAAcA,EACdE,gBAAiBP,QAAY,EAE5BD,EAAWkB,KAAIpC,GACdqB,YAACgB,IAAgB,CAAUrC,GAAIA,EAAIsC,cAAc,QAA1BtC,MAI3BqB,YAACkB,IAAM,UACLlB,YAAA,QAAMmB,KAAK,SAASC,QAAQ,aAIpC,EAEDnC,YAvDKJ,EAAK,YAEU,CACjBwC,OAAQC,IAAUC,OAAOC,WACzBnC,SAAUiC,IAAUG,KAAKD,WACzB5B,QAAS0B,IAAUI,KACnB3B,UAAWuB,IAAUI,KACrB7B,WAAY8B,IAAmBC,KAC/BjC,KAAM2B,IAAUC,OAAOC,WACvB1B,YAAawB,IAAUI,OAgDZG,6BA/DSC,IAAK,CAC3BjC,WAAYiC,EAAMC,MAAM,CAAC,aAAc,QAAS,UAChDnC,UAAWkC,EAAMC,MAAM,CAAC,aAAc,QAAS,SAC/ChC,UAAW+B,EAAMC,MAAM,CAAC,aAAc,QAAS,cAAc,MA4DhDF,CAAyBG,YAAWnD,G","file":"js/features/mutes-9685d3aa0f20b7175237.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport VolumeOffIcon from '@/material-icons/400-24px/volume_off.svg?react';\n\nimport { fetchMutes, expandMutes } from '../../actions/mutes';\nimport { LoadingIndicator } from '../../components/loading_indicator';\nimport ScrollableList from '../../components/scrollable_list';\nimport AccountContainer from '../../containers/account_container';\nimport Column from '../ui/components/column';\n\nconst messages = defineMessages({\n  heading: { id: 'column.mutes', defaultMessage: 'Muted users' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'mutes', 'items']),\n  hasMore: !!state.getIn(['user_lists', 'mutes', 'next']),\n  isLoading: state.getIn(['user_lists', 'mutes', 'isLoading'], true),\n});\n\nclass Mutes extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchMutes());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandMutes());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, hasMore, accountIds, multiColumn, isLoading } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.mutes' defaultMessage=\"You haven't muted any users yet.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='volume-off' iconComponent={VolumeOffIcon} heading={intl.formatMessage(messages.heading)} alwaysShowBackButton>\n        <ScrollableList\n          scrollKey='mutes'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {accountIds.map(id =>\n            <AccountContainer key={id} id={id} defaultAction='mute' />,\n          )}\n        </ScrollableList>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Mutes));\n"],"sourceRoot":""}