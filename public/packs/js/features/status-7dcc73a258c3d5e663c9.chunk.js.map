{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/bookmark-fill.svg?4516","webpack:///./app/javascript/mastodon/features/status/components/action_bar.jsx","webpack:///./app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///./app/javascript/mastodon/components/edited_timestamp/index.jsx","webpack:///./app/javascript/mastodon/features/status/components/detailed_status.jsx","webpack:///./app/javascript/mastodon/features/status/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","messages","defineMessages","delete","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","ActionBar","PureComponent","constructor","_defineProperty","onReply","status","e","onReblog","onFavourite","onBookmark","onDelete","history","onEdit","onDirect","get","onMention","relationship","onMute","onUnmute","account","onBlock","onUnblock","onBlockDomain","onUnblockDomain","split","onMuteConversation","onReport","onPin","navigator","url","onEmbed","clipboard","writeText","render","intl","signedIn","permissions","context","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","handleCopy","handleShare","handleEmbed","handlePinClick","handleConversationMuteClick","handleEditClick","handleDeleteClick","dangerous","handleRedraftClick","name","handleMentionClick","handleMuteClick","handleBlockClick","handleReport","domain","handleUnblockDomain","handleBlockDomain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","concat","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","reblogIconComponent","RepeatActiveIcon","RepeatPrivateActiveIcon","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","_jsx","className","IconButton","icon","iconComponent","onClick","handleReplyClick","classNames","disabled","active","handleReblogClick","animate","StarIcon","StarBorderIcon","handleFavouriteClick","BookmarkIcon","BookmarkBorderIcon","handleBookmarkClick","DropdownMenuContainer","MoreHorizIcon","items","direction","PropTypes","object","withRouter","connect","mapStateToProps","state","injectIntl","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","item","FormattedMessage","values","count","size","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","renderItem","scrollable","renderHeader","handleItemClick","formatDate","month","day","hour","minute","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","button","ctrlKey","metaKey","preventDefault","stopPropagation","options","onOpenVideo","onToggleHidden","c","node","_measureHeight","nodeName","parentNode","window","open","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","_properStatus","getAttachmentAspectRatio","attachments","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","favouriteLink","language","PictureInPicturePlaceholder","aspectRatio","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","handleOpenVideo","MediaGallery","standalone","onOpenMedia","Card","card","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","handleModalLink","statusContentProps","hashtagBar","getHashtagBarForStatus","expanded","style","ref","setRef","Icon","AlternateEmailIcon","handleAccountClick","Avatar","DisplayName","localDomain","_jsx2","StatusContent","onExpandedToggle","handleExpandedToggle","handleTranslate","FormattedDate","Date","year","ImmutablePropTypes","map","func","isRequired","bool","string","contains","inUse","available","WithRouterPropTypes","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","blockDomainConfirm","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","unfavourite","type","askReplyConfirmation","message","confirm","onConfirm","replyCompose","privacy","unreblog","shiftKey","boostModal","handleModalReblog","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","router","directCompose","mentionCompose","startTime","handleOpenMedia","initMuteModal","unmuteStatus","muteStatus","revealStatus","hideStatus","ancestorsIds","descendantsIds","statusIds","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","unmuteAccount","unblockAccount","initDomainBlockModal","handleMoveUp","handleMoveDown","handleToggleHidden","handleToggleMediaVisibility","_selectChild","indexOf","statusNode","isFullscreen","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","location","mastodonModalKey","offsetTop","UNSAFE_componentWillMount","fetchStatus","params","componentDidMount","attachFullscreenListener","onFullScreenChange","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestIdleCallback","_this$statusNode","_document$querySelect","offset","document","querySelector","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleHidden","handleHotkeyToggleHidden","toggleSensitive","handleHotkeyToggleSensitive","openMedia","handleHotkeyOpenMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","handleToggleAll","VisibilityOffIcon","ScrollContainer","scrollKey","shouldUpdateScroll","setContainerRef","HotKeys","tabIndex","textForScreenReader","setStatusRef","handleDirectClick","handleUnmuteClick","handleUnblockClick","handleBlockDomainClick","handleUnblockDomainClick","handlePin","Helmet","content","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/features/status-7dcc73a258c3d5e663c9.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBookmarkFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200-120v-640q0-33 23.5-56.5T280-840h400q33 0 56.5 23.5T760-760v640L480-240 200-120Z\"\n  })));\n}\nexport default SvgBookmarkFill;","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport BookmarkIcon from '@/material-icons/400-24px/bookmark-fill.svg?react';\nimport BookmarkBorderIcon from '@/material-icons/400-24px/bookmark.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star-fill.svg?react';\nimport StarBorderIcon from '@/material-icons/400-24px/star.svg?react';\nimport RepeatActiveIcon from '@/svg-icons/repeat_active.svg?react';\nimport RepeatDisabledIcon from '@/svg-icons/repeat_disabled.svg?react';\nimport RepeatPrivateIcon from '@/svg-icons/repeat_private.svg?react';\nimport RepeatPrivateActiveIcon from '@/svg-icons/repeat_private_active.svg?react';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.record,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.props.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.props.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.props.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.context.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatActiveIcon : RepeatPrivateActiveIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(injectIntl(ActionBar)));\n","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\n/**\n *\n * @param {import('mastodon/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: <span className='animated-number'>{intl.formatDate(timestamp, { month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</span> }} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport AlternateEmailIcon from '@/material-icons/400-24px/alternate_email.svg?react';\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'mastodon/components/hashtag_bar';\nimport { Icon }  from 'mastodon/components/icon';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'mastodon/components/visibility_icon';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    onTranslate: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  getAttachmentAspectRatio () {\n    const attachments = this._properStatus().get('media_attachments');\n\n    if (attachments.getIn([0, 'type']) === 'video') {\n      return `${attachments.getIn([0, 'meta', 'original', 'width'])} / ${attachments.getIn([0, 'meta', 'original', 'height'])}`;\n    } else if (attachments.getIn([0, 'type']) === 'audio') {\n      return '16 / 9';\n    } else {\n      return (attachments.size === 1 && attachments.getIn([0, 'meta', 'small', 'aspect'])) ? attachments.getIn([0, 'meta', 'small', 'aspect']) : '3 / 2';\n    }\n  }\n\n  render () {\n    const status = this._properStatus();\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    let favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder aspectRatio={this.getAttachmentAspectRatio()} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            aspectRatio={`${attachment.getIn(['meta', 'original', 'width'])} / ${attachment.getIn(['meta', 'original', 'height'])}`}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            width={300}\n            height={150}\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <>·<a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <>·<VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.props.history) {\n      reblogLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </Link>\n      );\n    } else {\n      reblogLink = (\n        <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__reblogs'>\n            <AnimatedNumber value={status.get('reblogs_count')} />\n          </span>\n          <FormattedMessage id='status.reblogs' defaultMessage='{count, plural, one {boost} other {boosts}}' values={{ count: status.get('reblogs_count') }} />\n        </a>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n          <FormattedMessage id='status.favourites' defaultMessage='{count, plural, one {favorite} other {favorites}}' values={{ count: status.get('favourites_count') }} />\n        </a>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    const expanded = !status.get('hidden') || status.get('spoiler_text').length === 0;\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })}>\n          {status.get('visibility') === 'direct' && (\n            <div className='status__prepend'>\n              <div className='status__prepend-icon-wrapper'><Icon id='at' icon={AlternateEmailIcon} className='status__prepend-icon' /></div>\n              <FormattedMessage id='status.direct_indicator' defaultMessage='Private mention' />\n            </div>\n          )}\n          <a href={`/@${status.getIn(['account', 'acct'])}`} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={46} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            expanded={!status.get('hidden')}\n            onExpandedToggle={this.handleExpandedToggle}\n            onTranslate={this.handleTranslate}\n            {...statusContentProps}\n          />\n\n          {media}\n\n          {expanded && hashtagBar}\n\n          <div className='detailed-status__meta'>\n            <div className='detailed-status__meta__line'>\n              <a className='detailed-status__datetime' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} target='_blank' rel='noopener noreferrer'>\n                <FormattedDate value={new Date(status.get('created_at'))} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n              </a>\n\n              {visibilityLink}\n\n              {applicationLink}\n            </div>\n\n            {status.get('edited_at') && <div className='detailed-status__meta__line'><EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} /></div>}\n\n            <div className='detailed-status__meta__line'>\n              {reblogLink}\n              {reblogLink && <>·</>}\n              {favouriteLink}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport VisibilityIcon from '@/material-icons/400-24px/visibility.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  initDomainBlockModal,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { boostModal, deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  blockDomainConfirm: { id: 'confirmations.domain_block.confirm', defaultMessage: 'Block entire domain' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onConfirm: () => dispatch(replyCompose(status, this.props.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.props.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    this.props.dispatch(reblog(status, privacy));\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('reblogged')) {\n        dispatch(unreblog(status));\n      } else {\n        if ((e && e.shiftKey) || !boostModal) {\n          this.handleModalReblog(status);\n        } else {\n          dispatch(openModal({ modalType: 'BOOST', modalProps: { status, onReblog: this.handleModalReblog } }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = account => {\n    this.props.dispatch(initDomainBlockModal(account));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setContainerRef = c => {\n    this.node = c;\n  };\n\n  setStatusRef = c => {\n    this.statusNode = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      requestIdleCallback(() => {\n        this.statusNode?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    if (this.statusNode) {\n      return [0, this.statusNode.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setContainerRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)} ref={this.setStatusRef}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(Status)));\n"],"sourceRoot":""}