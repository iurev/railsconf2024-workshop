{"version":3,"sources":["webpack:///./node_modules/@formatjs/intl-pluralrules/index.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/InitializePluralRules.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/ResolvePlural.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/GetOperands.js","webpack:///./node_modules/@formatjs/intl-pluralrules/get_internal_slots.js","webpack:///./node_modules/@formatjs/intl-pluralrules/polyfill-force.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/262.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetStringOrBooleanOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ApplyUnsignedRoundingMode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatApproximately.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRange.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRangeToParts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/GetUnsignedRoundingMode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/data.js"],"names":["Object","defineProperty","exports","value","PluralRules","tslib_1","ecma402_abstract_1","InitializePluralRules_1","ResolvePlural_1","get_internal_slots_1","__importDefault","validateInstance","instance","method","TypeError","concat","String","PluralRuleSelect","locale","type","_n","_a","IntegerDigits","NumberOfFractionDigits","FractionDigits","localeData","fn","locales","options","this","constructor","InitializePluralRules","availableLocales","relevantExtensionKeys","getDefaultLocale","getInternalSlots","default","prototype","resolvedOptions","opts","create","internalSlots","forEach","field","val","undefined","pluralCategories","__spreadArray","categories","select","n","ToNumber","ResolvePlural","toString","supportedLocalesOf","SupportedLocales","CanonicalizeLocaleList","__addLocaleData","data","_i","arguments","length","data_1","_b","d","add","__defaultLocale","Set","polyfilled","Symbol","toStringTag","writable","enumerable","configurable","error","ex","intl_localematcher_1","pl","requestedLocales","opt","CoerceOptionsToObject","initializedPluralRules","matcher","GetOption","localeMatcher","SetNumberFormatDigitOptions","r","ResolveLocale","GetOperands_1","invariant","Type","isFinite","s","FormatNumericToString","formattedString","GetOperands","iv","f","v","dp","indexOf","fv","slice","w","t","i","Math","abs","ft","replace","Number","NumberOfFractionDigitsWithoutTrailing","FractionDigitsWithoutTrailing","internalSlotMap","WeakMap","x","get","set","_1","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","zoneNames","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","reduce","all","z","ianaTimeZone","ToString","o","NaN","TimeClip","time","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","y","is","ArrayCreate","len","Array","HasOwnProperty","prop","hasOwnProperty","call","MS_PER_DAY","mod","Day","WeekDay","DayFromYear","Date","UTC","TimeFromYear","YearFromTime","getUTCFullYear","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","HOURS_PER_DAY","MINUTES_PER_HOUR","SECONDS_PER_MINUTE","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","HourFromTime","MinFromTime","SecFromTime","OrdinaryHasInstance","C","O","boundTargetFunction","P","isPrototypeOf","msFromTime","DefaultNumberOption","inputVal","min","max","fallback","RangeError","GetNumberOption","property","minimum","maximum","values","Boolean","filter","join","GetOptionsObject","GetStringOrBooleanOption","trueValue","falsyValue","SANCTIONED_UNITS","removeUnitNamespace","unit","SIMPLE_UNITS","map","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNamesFromData","linkNames","keys","linkName","has","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","_","c","test","IsWellFormedUnitIdentifier","toLowerCase","units","split","numerator","denominator","ApplyUnsignedRoundingMode","r1","r2","unsignedRoundingMode","d1","d2","CollapseNumberRange","result","ComputeExponentForMagnitude","numberFormat","magnitude","notation","dataLocaleData","numberingSystem","compactDisplay","style","currencyDisplay","thresholdMap","numbers","nu","short","decimal","long","num","pow","thresholds","magnitudeKey","other","match","ToRawPrecision","minPrecision","maxPrecision","m","e","xFinal","int","p","xToString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","round","adjustDecimalPlace","cut","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","mantissa","exponent","k","a","b","intlObject","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","minimumIntegerDigits","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","FormatApproximately","approximatelySign","symbols","push","digitMapping","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","source","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","pattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","exec","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","numberPatternParts_1","part","apply","paritionNumberIntoParts","useGrouping","minusSign","plusSign","percentSign","substring","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","_c","_d","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","negativePattern","rules","PartitionNumberPattern","nan","POSITIVE_INFINITY","NEGATIVE_INFINITY","infinity","signDisplay","PartitionNumberRangePattern","xResult","yResult","xResult_1","rangeSign","yResult_1","FormatNumericRange","FormatNumericRangeToParts","index","FormatNumericToParts","nf","implDetails","parts","parts_1","negativeMapping","ceil","expand","trunc","halfCeil","halfFloor","halfExpand","halfTrunc","halfEven","positiveMapping","GetUnsignedRoundingMode","roundingMode","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","roundingPriority","hasSd","hasFd","needSd","needFd","SetNumberFormatUnitOptions","VALID_ROUND_INCREMENT_VALUES","InitializeNumberFormat","numberingSystemNames","from","dataLocale","cDigits","roundingIncrement","trailingZeroDisplay","defaultUseGrouping","PartitionPattern","beginIndex","endIndex","nextIndex","RangePatternType","_super","MissingLocaleDataError","_this","isMissingLocaleDataError"],"mappings":"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KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,QAAW,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,QAAW,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,SAAY,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,SAAY,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,QAAW,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,QAAW,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,KAAQ,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OC1wBGC,GAAkB,u8ECKzBC,GAAwB,IAAIC,OAAO,IAAItS,OAAOoS,GAAgBG,SAE9DC,GAAyB,IAAIF,OAAO,GAAGtS,OAAOoS,GAAgBG,OAAQ,MACtEE,GAAsB,uBACX,SAASC,GAAcC,EAAchQ,EAAMmB,EAAIjD,GAC1D,IAUI+R,EAqBAC,EA/BAC,EAAOH,EAAaG,KAAMjC,E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","file":"js/i18n-pluralrules-polyfill-f4de1f167c7e93cd9611.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluralRules = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar InitializePluralRules_1 = require(\"./abstract/InitializePluralRules\");\nvar ResolvePlural_1 = require(\"./abstract/ResolvePlural\");\nvar get_internal_slots_1 = tslib_1.__importDefault(require(\"./get_internal_slots\"));\nfunction validateInstance(instance, method) {\n    if (!(instance instanceof PluralRules)) {\n        throw new TypeError(\"Method Intl.PluralRules.prototype.\".concat(method, \" called on incompatible receiver \").concat(String(instance)));\n    }\n}\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-pluralruleselect\n * @param locale\n * @param type\n * @param _n\n * @param param3\n */\nfunction PluralRuleSelect(locale, type, _n, _a) {\n    var IntegerDigits = _a.IntegerDigits, NumberOfFractionDigits = _a.NumberOfFractionDigits, FractionDigits = _a.FractionDigits;\n    return PluralRules.localeData[locale].fn(NumberOfFractionDigits\n        ? \"\".concat(IntegerDigits, \".\").concat(FractionDigits)\n        : IntegerDigits, type === 'ordinal');\n}\nvar PluralRules = /** @class */ (function () {\n    function PluralRules(locales, options) {\n        // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof PluralRules ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.PluralRules must be called with 'new'\");\n        }\n        return (0, InitializePluralRules_1.InitializePluralRules)(this, locales, options, {\n            availableLocales: PluralRules.availableLocales,\n            relevantExtensionKeys: PluralRules.relevantExtensionKeys,\n            localeData: PluralRules.localeData,\n            getDefaultLocale: PluralRules.getDefaultLocale,\n            getInternalSlots: get_internal_slots_1.default,\n        });\n    }\n    PluralRules.prototype.resolvedOptions = function () {\n        validateInstance(this, 'resolvedOptions');\n        var opts = Object.create(null);\n        var internalSlots = (0, get_internal_slots_1.default)(this);\n        opts.locale = internalSlots.locale;\n        opts.type = internalSlots.type;\n        [\n            'minimumIntegerDigits',\n            'minimumFractionDigits',\n            'maximumFractionDigits',\n            'minimumSignificantDigits',\n            'maximumSignificantDigits',\n        ].forEach(function (field) {\n            var val = internalSlots[field];\n            if (val !== undefined) {\n                opts[field] = val;\n            }\n        });\n        opts.pluralCategories = tslib_1.__spreadArray([], PluralRules.localeData[opts.locale].categories[opts.type], true);\n        return opts;\n    };\n    PluralRules.prototype.select = function (val) {\n        var pr = this;\n        validateInstance(pr, 'select');\n        var n = (0, ecma402_abstract_1.ToNumber)(val);\n        return (0, ResolvePlural_1.ResolvePlural)(pr, n, { getInternalSlots: get_internal_slots_1.default, PluralRuleSelect: PluralRuleSelect });\n    };\n    PluralRules.prototype.toString = function () {\n        return '[object Intl.PluralRules]';\n    };\n    PluralRules.supportedLocalesOf = function (locales, options) {\n        return (0, ecma402_abstract_1.SupportedLocales)(PluralRules.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\n    };\n    PluralRules.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var _b = data_1[_a], d = _b.data, locale = _b.locale;\n            PluralRules.localeData[locale] = d;\n            PluralRules.availableLocales.add(locale);\n            if (!PluralRules.__defaultLocale) {\n                PluralRules.__defaultLocale = locale;\n            }\n        }\n    };\n    PluralRules.getDefaultLocale = function () {\n        return PluralRules.__defaultLocale;\n    };\n    PluralRules.localeData = {};\n    PluralRules.availableLocales = new Set();\n    PluralRules.__defaultLocale = '';\n    PluralRules.relevantExtensionKeys = [];\n    PluralRules.polyfilled = true;\n    return PluralRules;\n}());\nexports.PluralRules = PluralRules;\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(PluralRules.prototype, Symbol.toStringTag, {\n            value: 'Intl.PluralRules',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    try {\n        // https://github.com/tc39/test262/blob/master/test/intl402/PluralRules/length.js\n        Object.defineProperty(PluralRules, 'length', {\n            value: 0,\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    catch (error) {\n        // IE 11 sets Function.prototype.length to be non-configurable which will cause the\n        // above Object.defineProperty to throw an error.\n    }\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n    Object.defineProperty(PluralRules.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(PluralRules.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (ex) {\n    // Meta fixes for test262\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitializePluralRules = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nfunction InitializePluralRules(pl, locales, options, _a) {\n    var availableLocales = _a.availableLocales, relevantExtensionKeys = _a.relevantExtensionKeys, localeData = _a.localeData, getDefaultLocale = _a.getDefaultLocale, getInternalSlots = _a.getInternalSlots;\n    var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);\n    var opt = Object.create(null);\n    var opts = (0, ecma402_abstract_1.CoerceOptionsToObject)(options);\n    var internalSlots = getInternalSlots(pl);\n    internalSlots.initializedPluralRules = true;\n    var matcher = (0, ecma402_abstract_1.GetOption)(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n    opt.localeMatcher = matcher;\n    internalSlots.type = (0, ecma402_abstract_1.GetOption)(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n    (0, ecma402_abstract_1.SetNumberFormatDigitOptions)(internalSlots, opts, 0, 3, 'standard');\n    var r = (0, intl_localematcher_1.ResolveLocale)(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n    internalSlots.locale = r.locale;\n    return pl;\n}\nexports.InitializePluralRules = InitializePluralRules;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvePlural = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar GetOperands_1 = require(\"./GetOperands\");\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-resolveplural\n * @param pl\n * @param n\n * @param PluralRuleSelect Has to pass in bc it's implementation-specific\n */\nfunction ResolvePlural(pl, n, _a) {\n    var getInternalSlots = _a.getInternalSlots, PluralRuleSelect = _a.PluralRuleSelect;\n    var internalSlots = getInternalSlots(pl);\n    (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(internalSlots) === 'Object', 'pl has to be an object');\n    (0, ecma402_abstract_1.invariant)('initializedPluralRules' in internalSlots, 'pluralrules must be initialized');\n    (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(n) === 'Number', 'n must be a number');\n    if (!isFinite(n)) {\n        return 'other';\n    }\n    var locale = internalSlots.locale, type = internalSlots.type;\n    var res = (0, ecma402_abstract_1.FormatNumericToString)(internalSlots, n);\n    var s = res.formattedString;\n    var operands = (0, GetOperands_1.GetOperands)(s);\n    return PluralRuleSelect(locale, type, n, operands);\n}\nexports.ResolvePlural = ResolvePlural;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOperands = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\nfunction GetOperands(s) {\n    (0, ecma402_abstract_1.invariant)(typeof s === 'string', \"GetOperands should have been called with a string\");\n    var n = (0, ecma402_abstract_1.ToNumber)(s);\n    (0, ecma402_abstract_1.invariant)(isFinite(n), 'n should be finite');\n    var dp = s.indexOf('.');\n    var iv;\n    var f;\n    var v;\n    var fv = '';\n    if (dp === -1) {\n        iv = n;\n        f = 0;\n        v = 0;\n    }\n    else {\n        iv = s.slice(0, dp);\n        fv = s.slice(dp, s.length);\n        f = (0, ecma402_abstract_1.ToNumber)(fv);\n        v = fv.length;\n    }\n    var i = Math.abs((0, ecma402_abstract_1.ToNumber)(iv));\n    var w;\n    var t;\n    if (f !== 0) {\n        var ft = fv.replace(/0+$/, '');\n        w = ft.length;\n        t = (0, ecma402_abstract_1.ToNumber)(ft);\n    }\n    else {\n        w = 0;\n        t = 0;\n    }\n    return {\n        Number: n,\n        IntegerDigits: i,\n        NumberOfFractionDigits: v,\n        NumberOfFractionDigitsWithoutTrailing: w,\n        FractionDigits: f,\n        FractionDigitsWithoutTrailing: t,\n    };\n}\nexports.GetOperands = GetOperands;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar internalSlotMap = new WeakMap();\nfunction getInternalSlots(x) {\n    var internalSlots = internalSlotMap.get(x);\n    if (!internalSlots) {\n        internalSlots = Object.create(null);\n        internalSlotMap.set(x, internalSlots);\n    }\n    return internalSlots;\n}\nexports.default = getInternalSlots;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"./\");\nObject.defineProperty(Intl, 'PluralRules', {\n    value: _1.PluralRules,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n});\n","/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var zoneNames = _a.zoneNames, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = zoneNames.reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e15) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\n","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    return ToObject(options);\n}\n","/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function DefaultNumberOption(inputVal, min, max, fallback) {\n    if (inputVal === undefined) {\n        // @ts-expect-error\n        return fallback;\n    }\n    var val = Number(inputVal);\n    if (isNaN(val) || val < min || val > max) {\n        throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n    }\n    return Math.floor(val);\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    if (typeof opts !== 'object') {\n        throw new TypeError('Options must be an object');\n    }\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    if (typeof options === 'object') {\n        return options;\n    }\n    throw new TypeError('Options must be an object');\n}\n","/**\n * https://tc39.es/ecma402/#sec-getstringorbooleanoption\n * @param opts\n * @param prop\n * @param values\n * @param trueValue\n * @param falsyValue\n * @param fallback\n */\nimport { ToString } from './262';\nexport function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {\n    var value = opts[prop];\n    if (value === undefined) {\n        return fallback;\n    }\n    if (value === true) {\n        return trueValue;\n    }\n    var valueBoolean = Boolean(value);\n    if (valueBoolean === false) {\n        return falsyValue;\n    }\n    value = ToString(value);\n    if (value === 'true' || value === 'false') {\n        return fallback;\n    }\n    if ((values || []).indexOf(value) === -1) {\n        throw new RangeError(\"Invalid value \".concat(value));\n    }\n    return value;\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var zoneNamesFromData = _a.zoneNamesFromData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set();\n    var linkNames = new Set();\n    zoneNamesFromData.map(function (z) { return z.toUpperCase(); }).forEach(function (z) { return zoneNames.add(z); });\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\n        linkNames.add(linkName.toUpperCase());\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n    });\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","export function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {\n    if (x === r1)\n        return r1;\n    if (unsignedRoundingMode === undefined) {\n        throw new Error('unsignedRoundingMode is mandatory');\n    }\n    if (unsignedRoundingMode === 'zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'infinity') {\n        return r2;\n    }\n    var d1 = x - r1;\n    var d2 = r2 - x;\n    if (d1 < d2) {\n        return r1;\n    }\n    if (d2 < d1) {\n        return r2;\n    }\n    if (d1 !== d2) {\n        throw new Error('Unexpected error');\n    }\n    if (unsignedRoundingMode === 'half-zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'half-infinity') {\n        return r2;\n    }\n    if (unsignedRoundingMode !== 'half-even') {\n        throw new Error(\"Unexpected value for unsignedRoundingMode: \".concat(unsignedRoundingMode));\n    }\n    var cardinality = (r1 / (r2 - r1)) % 2;\n    if (cardinality === 0) {\n        return r1;\n    }\n    return r2;\n}\n","/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n */\nexport function CollapseNumberRange(result) {\n    return result;\n}\n","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        var xToString = x.toString();\n        // If xToString is formatted as scientific notation, the number is either very small or very\n        // large. If the precision of the formatted string is lower that requested max precision, we\n        // should still infer them from the formatted string, otherwise the formatted result might have\n        // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n        var xToStringExponentIndex = xToString.indexOf('e');\n        var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n        var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n        if (xToStringExponentIndex >= 0 &&\n            xToStringMantissaWithoutDecimalPoint.length <= p) {\n            e = +xToStringExponent;\n            m =\n                xToStringMantissaWithoutDecimalPoint +\n                    repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n            xFinal = x;\n        }\n        else {\n            e = getMagnitude(x);\n            var decimalPlaceOffset = e - p + 1;\n            // n is the integer containing the required precision digits. To derive the formatted string,\n            // we will adjust its decimal place in the logic below.\n            var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n            // The rounding caused the change of magnitude, so we should increment `e` by 1.\n            if (adjustDecimalPlace(n, p - 1) >= 10) {\n                e = e + 1;\n                // Divide n by 10 to swallow one precision.\n                n = Math.floor(n / 10);\n            }\n            m = n.toString();\n            // Equivalent of n * 10 ** (e - p + 1)\n            xFinal = adjustDecimalPlace(n, p - 1 - e);\n        }\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n        int = e + 1;\n    }\n    else {\n        m = \"0.\".concat(repeat('0', -e - 1)).concat(m);\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n    // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n    function adjustDecimalPlace(x, magnitude) {\n        return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n    }\n}\n","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = \"\".concat(a, \".\").concat(b);\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","/**\n * https://tc39.es/ecma402/#sec-formatapproximately\n */\nexport function FormatApproximately(numberFormat, result, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    var approximatelySign = symbols.approximatelySign;\n    result.push({ type: 'approximatelySign', value: approximatelySign });\n    return result;\n}\n","export var digitMapping = {\n    \"adlm\": [\n        \"𞥐\",\n        \"𞥑\",\n        \"𞥒\",\n        \"𞥓\",\n        \"𞥔\",\n        \"𞥕\",\n        \"𞥖\",\n        \"𞥗\",\n        \"𞥘\",\n        \"𞥙\"\n    ],\n    \"ahom\": [\n        \"𑜰\",\n        \"𑜱\",\n        \"𑜲\",\n        \"𑜳\",\n        \"𑜴\",\n        \"𑜵\",\n        \"𑜶\",\n        \"𑜷\",\n        \"𑜸\",\n        \"𑜹\"\n    ],\n    \"arab\": [\n        \"٠\",\n        \"١\",\n        \"٢\",\n        \"٣\",\n        \"٤\",\n        \"٥\",\n        \"٦\",\n        \"٧\",\n        \"٨\",\n        \"٩\"\n    ],\n    \"arabext\": [\n        \"۰\",\n        \"۱\",\n        \"۲\",\n        \"۳\",\n        \"۴\",\n        \"۵\",\n        \"۶\",\n        \"۷\",\n        \"۸\",\n        \"۹\"\n    ],\n    \"bali\": [\n        \"᭐\",\n        \"᭑\",\n        \"᭒\",\n        \"᭓\",\n        \"᭔\",\n        \"᭕\",\n        \"᭖\",\n        \"᭗\",\n        \"᭘\",\n        \"᭙\"\n    ],\n    \"beng\": [\n        \"০\",\n        \"১\",\n        \"২\",\n        \"৩\",\n        \"৪\",\n        \"৫\",\n        \"৬\",\n        \"৭\",\n        \"৮\",\n        \"৯\"\n    ],\n    \"bhks\": [\n        \"𑱐\",\n        \"𑱑\",\n        \"𑱒\",\n        \"𑱓\",\n        \"𑱔\",\n        \"𑱕\",\n        \"𑱖\",\n        \"𑱗\",\n        \"𑱘\",\n        \"𑱙\"\n    ],\n    \"brah\": [\n        \"𑁦\",\n        \"𑁧\",\n        \"𑁨\",\n        \"𑁩\",\n        \"𑁪\",\n        \"𑁫\",\n        \"𑁬\",\n        \"𑁭\",\n        \"𑁮\",\n        \"𑁯\"\n    ],\n    \"cakm\": [\n        \"𑄶\",\n        \"𑄷\",\n        \"𑄸\",\n        \"𑄹\",\n        \"𑄺\",\n        \"𑄻\",\n        \"𑄼\",\n        \"𑄽\",\n        \"𑄾\",\n        \"𑄿\"\n    ],\n    \"cham\": [\n        \"꩐\",\n        \"꩑\",\n        \"꩒\",\n        \"꩓\",\n        \"꩔\",\n        \"꩕\",\n        \"꩖\",\n        \"꩗\",\n        \"꩘\",\n        \"꩙\"\n    ],\n    \"deva\": [\n        \"०\",\n        \"१\",\n        \"२\",\n        \"३\",\n        \"४\",\n        \"५\",\n        \"६\",\n        \"७\",\n        \"८\",\n        \"९\"\n    ],\n    \"diak\": [\n        \"𑥐\",\n        \"𑥑\",\n        \"𑥒\",\n        \"𑥓\",\n        \"𑥔\",\n        \"𑥕\",\n        \"𑥖\",\n        \"𑥗\",\n        \"𑥘\",\n        \"𑥙\"\n    ],\n    \"fullwide\": [\n        \"０\",\n        \"１\",\n        \"２\",\n        \"３\",\n        \"４\",\n        \"５\",\n        \"６\",\n        \"７\",\n        \"８\",\n        \"９\"\n    ],\n    \"gong\": [\n        \"𑶠\",\n        \"𑶡\",\n        \"𑶢\",\n        \"𑶣\",\n        \"𑶤\",\n        \"𑶥\",\n        \"𑶦\",\n        \"𑶧\",\n        \"𑶨\",\n        \"𑶩\"\n    ],\n    \"gonm\": [\n        \"𑵐\",\n        \"𑵑\",\n        \"𑵒\",\n        \"𑵓\",\n        \"𑵔\",\n        \"𑵕\",\n        \"𑵖\",\n        \"𑵗\",\n        \"𑵘\",\n        \"𑵙\"\n    ],\n    \"gujr\": [\n        \"૦\",\n        \"૧\",\n        \"૨\",\n        \"૩\",\n        \"૪\",\n        \"૫\",\n        \"૬\",\n        \"૭\",\n        \"૮\",\n        \"૯\"\n    ],\n    \"guru\": [\n        \"੦\",\n        \"੧\",\n        \"੨\",\n        \"੩\",\n        \"੪\",\n        \"੫\",\n        \"੬\",\n        \"੭\",\n        \"੮\",\n        \"੯\"\n    ],\n    \"hanidec\": [\n        \"〇\",\n        \"一\",\n        \"二\",\n        \"三\",\n        \"四\",\n        \"五\",\n        \"六\",\n        \"七\",\n        \"八\",\n        \"九\"\n    ],\n    \"hmng\": [\n        \"𖭐\",\n        \"𖭑\",\n        \"𖭒\",\n        \"𖭓\",\n        \"𖭔\",\n        \"𖭕\",\n        \"𖭖\",\n        \"𖭗\",\n        \"𖭘\",\n        \"𖭙\"\n    ],\n    \"hmnp\": [\n        \"𞅀\",\n        \"𞅁\",\n        \"𞅂\",\n        \"𞅃\",\n        \"𞅄\",\n        \"𞅅\",\n        \"𞅆\",\n        \"𞅇\",\n        \"𞅈\",\n        \"𞅉\"\n    ],\n    \"java\": [\n        \"꧐\",\n        \"꧑\",\n        \"꧒\",\n        \"꧓\",\n        \"꧔\",\n        \"꧕\",\n        \"꧖\",\n        \"꧗\",\n        \"꧘\",\n        \"꧙\"\n    ],\n    \"kali\": [\n        \"꤀\",\n        \"꤁\",\n        \"꤂\",\n        \"꤃\",\n        \"꤄\",\n        \"꤅\",\n        \"꤆\",\n        \"꤇\",\n        \"꤈\",\n        \"꤉\"\n    ],\n    \"khmr\": [\n        \"០\",\n        \"១\",\n        \"២\",\n        \"៣\",\n        \"៤\",\n        \"៥\",\n        \"៦\",\n        \"៧\",\n        \"៨\",\n        \"៩\"\n    ],\n    \"knda\": [\n        \"೦\",\n        \"೧\",\n        \"೨\",\n        \"೩\",\n        \"೪\",\n        \"೫\",\n        \"೬\",\n        \"೭\",\n        \"೮\",\n        \"೯\"\n    ],\n    \"lana\": [\n        \"᪀\",\n        \"᪁\",\n        \"᪂\",\n        \"᪃\",\n        \"᪄\",\n        \"᪅\",\n        \"᪆\",\n        \"᪇\",\n        \"᪈\",\n        \"᪉\"\n    ],\n    \"lanatham\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"laoo\": [\n        \"໐\",\n        \"໑\",\n        \"໒\",\n        \"໓\",\n        \"໔\",\n        \"໕\",\n        \"໖\",\n        \"໗\",\n        \"໘\",\n        \"໙\"\n    ],\n    \"lepc\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"limb\": [\n        \"᥆\",\n        \"᥇\",\n        \"᥈\",\n        \"᥉\",\n        \"᥊\",\n        \"᥋\",\n        \"᥌\",\n        \"᥍\",\n        \"᥎\",\n        \"᥏\"\n    ],\n    \"mathbold\": [\n        \"𝟎\",\n        \"𝟏\",\n        \"𝟐\",\n        \"𝟑\",\n        \"𝟒\",\n        \"𝟓\",\n        \"𝟔\",\n        \"𝟕\",\n        \"𝟖\",\n        \"𝟗\"\n    ],\n    \"mathdbl\": [\n        \"𝟘\",\n        \"𝟙\",\n        \"𝟚\",\n        \"𝟛\",\n        \"𝟜\",\n        \"𝟝\",\n        \"𝟞\",\n        \"𝟟\",\n        \"𝟠\",\n        \"𝟡\"\n    ],\n    \"mathmono\": [\n        \"𝟶\",\n        \"𝟷\",\n        \"𝟸\",\n        \"𝟹\",\n        \"𝟺\",\n        \"𝟻\",\n        \"𝟼\",\n        \"𝟽\",\n        \"𝟾\",\n        \"𝟿\"\n    ],\n    \"mathsanb\": [\n        \"𝟬\",\n        \"𝟭\",\n        \"𝟮\",\n        \"𝟯\",\n        \"𝟰\",\n        \"𝟱\",\n        \"𝟲\",\n        \"𝟳\",\n        \"𝟴\",\n        \"𝟵\"\n    ],\n    \"mathsans\": [\n        \"𝟢\",\n        \"𝟣\",\n        \"𝟤\",\n        \"𝟥\",\n        \"𝟦\",\n        \"𝟧\",\n        \"𝟨\",\n        \"𝟩\",\n        \"𝟪\",\n        \"𝟫\"\n    ],\n    \"mlym\": [\n        \"൦\",\n        \"൧\",\n        \"൨\",\n        \"൩\",\n        \"൪\",\n        \"൫\",\n        \"൬\",\n        \"൭\",\n        \"൮\",\n        \"൯\"\n    ],\n    \"modi\": [\n        \"𑙐\",\n        \"𑙑\",\n        \"𑙒\",\n        \"𑙓\",\n        \"𑙔\",\n        \"𑙕\",\n        \"𑙖\",\n        \"𑙗\",\n        \"𑙘\",\n        \"𑙙\"\n    ],\n    \"mong\": [\n        \"᠐\",\n        \"᠑\",\n        \"᠒\",\n        \"᠓\",\n        \"᠔\",\n        \"᠕\",\n        \"᠖\",\n        \"᠗\",\n        \"᠘\",\n        \"᠙\"\n    ],\n    \"mroo\": [\n        \"𖩠\",\n        \"𖩡\",\n        \"𖩢\",\n        \"𖩣\",\n        \"𖩤\",\n        \"𖩥\",\n        \"𖩦\",\n        \"𖩧\",\n        \"𖩨\",\n        \"𖩩\"\n    ],\n    \"mtei\": [\n        \"꯰\",\n        \"꯱\",\n        \"꯲\",\n        \"꯳\",\n        \"꯴\",\n        \"꯵\",\n        \"꯶\",\n        \"꯷\",\n        \"꯸\",\n        \"꯹\"\n    ],\n    \"mymr\": [\n        \"၀\",\n        \"၁\",\n        \"၂\",\n        \"၃\",\n        \"၄\",\n        \"၅\",\n        \"၆\",\n        \"၇\",\n        \"၈\",\n        \"၉\"\n    ],\n    \"mymrshan\": [\n        \"႐\",\n        \"႑\",\n        \"႒\",\n        \"႓\",\n        \"႔\",\n        \"႕\",\n        \"႖\",\n        \"႗\",\n        \"႘\",\n        \"႙\"\n    ],\n    \"mymrtlng\": [\n        \"꧰\",\n        \"꧱\",\n        \"꧲\",\n        \"꧳\",\n        \"꧴\",\n        \"꧵\",\n        \"꧶\",\n        \"꧷\",\n        \"꧸\",\n        \"꧹\"\n    ],\n    \"newa\": [\n        \"𑑐\",\n        \"𑑑\",\n        \"𑑒\",\n        \"𑑓\",\n        \"𑑔\",\n        \"𑑕\",\n        \"𑑖\",\n        \"𑑗\",\n        \"𑑘\",\n        \"𑑙\"\n    ],\n    \"nkoo\": [\n        \"߀\",\n        \"߁\",\n        \"߂\",\n        \"߃\",\n        \"߄\",\n        \"߅\",\n        \"߆\",\n        \"߇\",\n        \"߈\",\n        \"߉\"\n    ],\n    \"olck\": [\n        \"᱐\",\n        \"᱑\",\n        \"᱒\",\n        \"᱓\",\n        \"᱔\",\n        \"᱕\",\n        \"᱖\",\n        \"᱗\",\n        \"᱘\",\n        \"᱙\"\n    ],\n    \"orya\": [\n        \"୦\",\n        \"୧\",\n        \"୨\",\n        \"୩\",\n        \"୪\",\n        \"୫\",\n        \"୬\",\n        \"୭\",\n        \"୮\",\n        \"୯\"\n    ],\n    \"osma\": [\n        \"𐒠\",\n        \"𐒡\",\n        \"𐒢\",\n        \"𐒣\",\n        \"𐒤\",\n        \"𐒥\",\n        \"𐒦\",\n        \"𐒧\",\n        \"𐒨\",\n        \"𐒩\"\n    ],\n    \"rohg\": [\n        \"𐴰\",\n        \"𐴱\",\n        \"𐴲\",\n        \"𐴳\",\n        \"𐴴\",\n        \"𐴵\",\n        \"𐴶\",\n        \"𐴷\",\n        \"𐴸\",\n        \"𐴹\"\n    ],\n    \"saur\": [\n        \"꣐\",\n        \"꣑\",\n        \"꣒\",\n        \"꣓\",\n        \"꣔\",\n        \"꣕\",\n        \"꣖\",\n        \"꣗\",\n        \"꣘\",\n        \"꣙\"\n    ],\n    \"segment\": [\n        \"🯰\",\n        \"🯱\",\n        \"🯲\",\n        \"🯳\",\n        \"🯴\",\n        \"🯵\",\n        \"🯶\",\n        \"🯷\",\n        \"🯸\",\n        \"🯹\"\n    ],\n    \"shrd\": [\n        \"𑇐\",\n        \"𑇑\",\n        \"𑇒\",\n        \"𑇓\",\n        \"𑇔\",\n        \"𑇕\",\n        \"𑇖\",\n        \"𑇗\",\n        \"𑇘\",\n        \"𑇙\"\n    ],\n    \"sind\": [\n        \"𑋰\",\n        \"𑋱\",\n        \"𑋲\",\n        \"𑋳\",\n        \"𑋴\",\n        \"𑋵\",\n        \"𑋶\",\n        \"𑋷\",\n        \"𑋸\",\n        \"𑋹\"\n    ],\n    \"sinh\": [\n        \"෦\",\n        \"෧\",\n        \"෨\",\n        \"෩\",\n        \"෪\",\n        \"෫\",\n        \"෬\",\n        \"෭\",\n        \"෮\",\n        \"෯\"\n    ],\n    \"sora\": [\n        \"𑃰\",\n        \"𑃱\",\n        \"𑃲\",\n        \"𑃳\",\n        \"𑃴\",\n        \"𑃵\",\n        \"𑃶\",\n        \"𑃷\",\n        \"𑃸\",\n        \"𑃹\"\n    ],\n    \"sund\": [\n        \"᮰\",\n        \"᮱\",\n        \"᮲\",\n        \"᮳\",\n        \"᮴\",\n        \"᮵\",\n        \"᮶\",\n        \"᮷\",\n        \"᮸\",\n        \"᮹\"\n    ],\n    \"takr\": [\n        \"𑛀\",\n        \"𑛁\",\n        \"𑛂\",\n        \"𑛃\",\n        \"𑛄\",\n        \"𑛅\",\n        \"𑛆\",\n        \"𑛇\",\n        \"𑛈\",\n        \"𑛉\"\n    ],\n    \"talu\": [\n        \"᧐\",\n        \"᧑\",\n        \"᧒\",\n        \"᧓\",\n        \"᧔\",\n        \"᧕\",\n        \"᧖\",\n        \"᧗\",\n        \"᧘\",\n        \"᧙\"\n    ],\n    \"tamldec\": [\n        \"௦\",\n        \"௧\",\n        \"௨\",\n        \"௩\",\n        \"௪\",\n        \"௫\",\n        \"௬\",\n        \"௭\",\n        \"௮\",\n        \"௯\"\n    ],\n    \"telu\": [\n        \"౦\",\n        \"౧\",\n        \"౨\",\n        \"౩\",\n        \"౪\",\n        \"౫\",\n        \"౬\",\n        \"౭\",\n        \"౮\",\n        \"౯\"\n    ],\n    \"thai\": [\n        \"๐\",\n        \"๑\",\n        \"๒\",\n        \"๓\",\n        \"๔\",\n        \"๕\",\n        \"๖\",\n        \"๗\",\n        \"๘\",\n        \"๙\"\n    ],\n    \"tibt\": [\n        \"༠\",\n        \"༡\",\n        \"༢\",\n        \"༣\",\n        \"༤\",\n        \"༥\",\n        \"༦\",\n        \"༧\",\n        \"༨\",\n        \"༩\"\n    ],\n    \"tirh\": [\n        \"𑓐\",\n        \"𑓑\",\n        \"𑓒\",\n        \"𑓓\",\n        \"𑓔\",\n        \"𑓕\",\n        \"𑓖\",\n        \"𑓗\",\n        \"𑓘\",\n        \"𑓙\"\n    ],\n    \"vaii\": [\n        \"ᘠ\",\n        \"ᘡ\",\n        \"ᘢ\",\n        \"ᘣ\",\n        \"ᘤ\",\n        \"ᘥ\",\n        \"ᘦ\",\n        \"ᘧ\",\n        \"ᘨ\",\n        \"ᘩ\"\n    ],\n    \"wara\": [\n        \"𑣠\",\n        \"𑣡\",\n        \"𑣢\",\n        \"𑣣\",\n        \"𑣤\",\n        \"𑣥\",\n        \"𑣦\",\n        \"𑣧\",\n        \"𑣨\",\n        \"𑣩\"\n    ],\n    \"wcho\": [\n        \"𞋰\",\n        \"𞋱\",\n        \"𞋲\",\n        \"𞋳\",\n        \"𞋴\",\n        \"𞋵\",\n        \"𞋶\",\n        \"𞋷\",\n        \"𞋸\",\n        \"𞋹\"\n    ]\n};\n","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n","import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && Boolean(options.useGrouping), decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (x == Number.POSITIVE_INFINITY || x == Number.NEGATIVE_INFINITY) {\n        n = symbols.infinity;\n    }\n    else {\n        if (!SameValue(x, -0)) {\n            if (!isFinite(x)) {\n                throw new Error('Input must be a mathematical value');\n            }\n            if (internalSlots.style == 'percent') {\n                x *= 100;\n            }\n            ;\n            _b = ComputeExponent(numberFormat, x, {\n                getInternalSlots: getInternalSlots,\n            }), exponent = _b[0], magnitude = _b[1];\n            // Preserve more precision by doing multiplication when exponent is negative.\n            x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        }\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return formatToParts({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (isNaN(x) || isNaN(y)) {\n        throw new RangeError('Input must be a number');\n    }\n    var result = [];\n    var xResult = PartitionNumberPattern(numberFormat, x, { getInternalSlots: getInternalSlots });\n    var yResult = PartitionNumberPattern(numberFormat, y, { getInternalSlots: getInternalSlots });\n    if (xResult === yResult) {\n        return FormatApproximately(numberFormat, xResult, { getInternalSlots: getInternalSlots });\n    }\n    for (var _i = 0, xResult_1 = xResult; _i < xResult_1.length; _i++) {\n        var r = xResult_1[_i];\n        r.source = 'startRange';\n    }\n    result = result.concat(xResult);\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    result.push({ type: 'literal', value: symbols.rangeSign, source: 'shared' });\n    for (var _b = 0, yResult_1 = yResult; _b < yResult_1.length; _b++) {\n        var r = yResult_1[_b];\n        r.source = 'endRange';\n    }\n    result = result.concat(yResult);\n    return CollapseNumberRange(result);\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrange\n */\nexport function FormatNumericRange(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part) { return part.value; }).join('');\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrangetoparts\n */\nexport function FormatNumericRangeToParts(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part, index) { return ({\n        type: part.type,\n        value: part.value,\n        source: part.source,\n        result: index.toString(),\n    }); });\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(nf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","var negativeMapping = {\n    ceil: 'zero',\n    floor: 'infinity',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-zero',\n    halfFloor: 'half-infinity',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nvar positiveMapping = {\n    ceil: 'infinity',\n    floor: 'zero',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-infinity',\n    halfFloor: 'half-zero',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nexport function GetUnsignedRoundingMode(roundingMode, isNegative) {\n    if (isNegative) {\n        return negativeMapping[roundingMode];\n    }\n    return positiveMapping[roundingMode];\n}\n","import { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n    var hasSd = mnsd !== undefined || mxsd !== undefined;\n    var hasFd = mnfd !== undefined || mxfd !== undefined;\n    var needSd = true;\n    var needFd = true;\n    if (roundingPriority === 'auto') {\n        needSd = hasSd;\n        if (hasSd || (!hasFd && notation === 'compact')) {\n            needFd = false;\n        }\n    }\n    if (needSd) {\n        if (hasSd) {\n            mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n            mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n            internalSlots.minimumSignificantDigits = mnsd;\n            internalSlots.maximumSignificantDigits = mxsd;\n        }\n        else {\n            internalSlots.minimumSignificantDigits = 1;\n            internalSlots.maximumSignificantDigits = 21;\n        }\n    }\n    if (needFd) {\n        if (hasFd) {\n            mnfd = DefaultNumberOption(mnfd, 0, 20, undefined);\n            mxfd = DefaultNumberOption(mxfd, 0, 20, undefined);\n            if (mnfd === undefined) {\n                // @ts-expect-error\n                mnfd = Math.min(mnfdDefault, mxfd);\n            }\n            else if (mxfd === undefined) {\n                mxfd = Math.max(mxfdDefault, mnfd);\n            }\n            else if (mnfd > mxfd) {\n                throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n            }\n            internalSlots.minimumFractionDigits = mnfd;\n            internalSlots.maximumFractionDigits = mxfd;\n        }\n        else {\n            internalSlots.minimumFractionDigits = mnfdDefault;\n            internalSlots.maximumFractionDigits = mxfdDefault;\n        }\n    }\n    if (needSd || needFd) {\n        if (roundingPriority === 'morePrecision') {\n            internalSlots.roundingType = 'morePrecision';\n        }\n        else if (roundingPriority === 'lessPrecision') {\n            internalSlots.roundingType = 'lessPrecision';\n        }\n        else if (hasSd) {\n            internalSlots.roundingType = 'significantDigits';\n        }\n        else {\n            internalSlots.roundingType = 'fractionDigits';\n        }\n    }\n    else {\n        internalSlots.roundingType = 'morePrecision';\n        internalSlots.minimumFractionDigits = 0;\n        internalSlots.maximumFractionDigits = 0;\n        internalSlots.minimumSignificantDigits = 1;\n        internalSlots.maximumSignificantDigits = 2;\n    }\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\nimport { GetStringOrBooleanOption } from '../GetStringOrBooleanOption';\nimport { invariant } from '../utils';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nvar VALID_ROUND_INCREMENT_VALUES = [\n    1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000,\n];\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = CoerceOptionsToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(Array.from(availableLocales), requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[r.dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var roundingIncrement = GetNumberOption(options, 'roundingIncrement', 1, 5000, 1);\n    if (VALID_ROUND_INCREMENT_VALUES.indexOf(roundingIncrement) === -1) {\n        throw new RangeError(\"Invalid rounding increment value: \".concat(roundingIncrement, \".\\nValid values are \").concat(VALID_ROUND_INCREMENT_VALUES, \".\"));\n    }\n    if (roundingIncrement !== 1 &&\n        internalSlots.roundingType !== 'fractionDigits') {\n        throw new TypeError(\"For roundingIncrement > 1 only fractionDigits is a valid roundingType\");\n    }\n    if (roundingIncrement !== 1 &&\n        internalSlots.maximumFractionDigits !== internalSlots.minimumFractionDigits) {\n        throw new RangeError('With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.');\n    }\n    internalSlots.roundingIncrement = roundingIncrement;\n    var trailingZeroDisplay = GetOption(options, 'trailingZeroDisplay', 'string', ['auto', 'stripIfInteger'], 'auto');\n    internalSlots.trailingZeroDisplay = trailingZeroDisplay;\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    var defaultUseGrouping = 'auto';\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n        defaultUseGrouping = 'min2';\n    }\n    internalSlots.useGrouping = GetStringOrBooleanOption(options, 'useGrouping', ['min2', 'auto', 'always'], 'always', false, defaultUseGrouping);\n    internalSlots.signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero', 'negative'], 'auto');\n    internalSlots.roundingMode = GetOption(options, 'roundingMode', 'string', [\n        'ceil',\n        'floor',\n        'expand',\n        'trunc',\n        'halfCeil',\n        'halfFloor',\n        'halfExpand',\n        'halfTrunc',\n        'halfEven',\n    ], 'halfExpand');\n    return nf;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { LookupSupportedLocales } from '@formatjs/intl-localematcher';\nimport { ToObject } from './262';\nimport { GetOption } from './GetOption';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n    }\n    return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n"],"sourceRoot":""}