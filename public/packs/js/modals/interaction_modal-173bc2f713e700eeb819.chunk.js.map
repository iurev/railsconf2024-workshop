{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/interaction_modal/index.jsx","webpack:///./node_modules/lodash/escapeRegExp.js"],"names":["messages","defineMessages","loginPrompt","id","defaultMessage","PERSISTENCE_KEY","valueToDomain","value","test","url","URL","pathname","length","host","includes","replace","split","addInputToOptions","options","trim","hostname","isValidDomain","concat","filter","x","LoginForm","React","PureComponent","constructor","arguments","_defineProperty","localStorage","getItem","expanded","selectedOption","isLoading","isSubmitting","error","networkOptions","c","this","input","likelyAcct","startsWith","slice","_","_ref2","target","isValueValid","setState","state","_loadOptions","event","_event$data","_event$data2","resourceUrl","props","origin","window","source","iframeRef","contentWindow","data","type","template","encodeURIComponent","setItem","uri_or_domain","location","href","e","console","postMessage","iframe","key","preventDefault","Math","min","max","handleSubmit","index","Number","currentTarget","getAttribute","option","_throttle","domain","api","get","params","q","then","_ref3","catch","leading","trailing","componentDidMount","addEventListener","handleMessage","componentWillUnmount","removeEventListener","render","intl","domainRegExp","RegExp","_escapeRegExp","hasPopOut","_jsx2","className","classNames","focused","invalid","_jsx","ref","setIFrameRef","style","display","src","sandbox","title","setRef","placeholder","formatMessage","autoFocus","onChange","handleChange","onFocus","handleFocus","onBlur","handleBlur","onKeyDown","handleKeyDown","autoComplete","autoCapitalize","spellCheck","Button","onClick","disabled","FormattedMessage","map","i","onMouseDown","handleOptionClick","selected","part","toLowerCase","IntlLoginForm","injectIntl","InteractionModal","onSignupClick","displayNameHtml","signupUrl","name","dangerouslySetInnerHTML","__html","actionDescription","icon","signupButton","Icon","ReplyIcon","values","RepeatIcon","StarIcon","PersonAddIcon","sso_redirect","registrationsOpen","handleSignupClick","connect","mapStateToProps","_ref","accountId","getIn","dispatch","closeModal","modalType","undefined","ignoreFocus","openModal","toString","reRegExpChar","reHasRegExpChar","module","exports","string"],"mappings":"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","file":"js/modals/interaction_modal-173bc2f713e700eeb819.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nimport { throttle, escapeRegExp } from 'lodash';\n\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star.svg?react';\nimport { openModal, closeModal } from 'mastodon/actions/modal';\nimport api from 'mastodon/api';\nimport { Button } from 'mastodon/components/button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { registrationsOpen, sso_redirect } from 'mastodon/initial_state';\n\nconst messages = defineMessages({\n  loginPrompt: { id: 'interaction_modal.login.prompt', defaultMessage: 'Domain of your home server, e.g. mastodon.social' },\n});\n\nconst mapStateToProps = (state, { accountId }) => ({\n  displayNameHtml: state.getIn(['accounts', accountId, 'display_name_html']),\n  signupUrl: state.getIn(['server', 'server', 'registrations', 'url'], null) || '/auth/sign_up',\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSignupClick() {\n    dispatch(closeModal({\n      modalType: undefined,\n      ignoreFocus: false,\n    }));\n    dispatch(openModal({ modalType: 'CLOSED_REGISTRATIONS' }));\n  },\n});\n\nconst PERSISTENCE_KEY = 'mastodon_home';\n\nconst isValidDomain = value => {\n  const url = new URL('https:///path');\n  url.hostname = value;\n  return url.hostname === value;\n};\n\nconst valueToDomain = value => {\n  // If the user starts typing an URL\n  if (/^https?:\\/\\//.test(value)) {\n    try {\n      const url = new URL(value);\n\n      // Consider that if there is a path, the URL is more meaningful than a bare domain\n      if (url.pathname.length > 1) {\n        return '';\n      }\n\n      return url.host;\n    } catch {\n      return undefined;\n    }\n  // If the user writes their full handle including username\n  } else if (value.includes('@')) {\n    if (value.replace(/^@/, '').split('@').length > 2) {\n      return undefined;\n    }\n    return '';\n  }\n\n  return value;\n};\n\nconst addInputToOptions = (value, options) => {\n  value = value.trim();\n\n  if (value.includes('.') && isValidDomain(value)) {\n    return [value].concat(options.filter((x) => x !== value));\n  }\n\n  return options;\n};\n\nclass LoginForm extends React.PureComponent {\n\n  static propTypes = {\n    resourceUrl: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    value: localStorage ? (localStorage.getItem(PERSISTENCE_KEY) || '') : '',\n    expanded: false,\n    selectedOption: -1,\n    isLoading: false,\n    isSubmitting: false,\n    error: false,\n    options: [],\n    networkOptions: [],\n  };\n\n  setRef = c => {\n    this.input = c;\n  };\n\n  isValueValid = (value) => {\n    let likelyAcct = false;\n    let url = null;\n\n    if (value.startsWith('/')) {\n      return false;\n    }\n\n    if (value.startsWith('@')) {\n      value = value.slice(1);\n      likelyAcct = true;\n    }\n\n    // The user is in the middle of typing something, do not error out\n    if (value === '') {\n      return true;\n    }\n\n    if (/^https?:\\/\\//.test(value) && !likelyAcct) {\n      url = value;\n    } else {\n      url = `https://${value}`;\n    }\n\n    try {\n      new URL(url);\n      return true;\n    } catch(_) {\n      return false;\n    }\n  };\n\n  handleChange = ({ target }) => {\n    const error = !this.isValueValid(target.value);\n    this.setState(state => ({ error, value: target.value, isLoading: true, options: addInputToOptions(target.value, state.networkOptions) }), () => this._loadOptions());\n  };\n\n  handleMessage = (event) => {\n    const { resourceUrl } = this.props;\n\n    if (event.origin !== window.origin || event.source !== this.iframeRef.contentWindow) {\n      return;\n    }\n\n    if (event.data?.type === 'fetchInteractionURL-failure') {\n      this.setState({ isSubmitting: false, error: true });\n    } else if (event.data?.type === 'fetchInteractionURL-success') {\n      if (/^https?:\\/\\//.test(event.data.template)) {\n        try {\n          const url = new URL(event.data.template.replace('{uri}', encodeURIComponent(resourceUrl)));\n\n          if (localStorage) {\n            localStorage.setItem(PERSISTENCE_KEY, event.data.uri_or_domain);\n          }\n\n          window.location.href = url;\n        } catch (e) {\n          console.error(e);\n          this.setState({ isSubmitting: false, error: true });\n        }\n      } else {\n        this.setState({ isSubmitting: false, error: true });\n      }\n    }\n  };\n\n  componentDidMount () {\n    window.addEventListener('message', this.handleMessage);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('message', this.handleMessage);\n  }\n\n  handleSubmit = () => {\n    const { value } = this.state;\n\n    this.setState({ isSubmitting: true });\n\n    this.iframeRef.contentWindow.postMessage({\n      type: 'fetchInteractionURL',\n      uri_or_domain: value.trim(),\n    }, window.origin);\n  };\n\n  setIFrameRef = (iframe) => {\n    this.iframeRef = iframe;\n  };\n\n  handleFocus = () => {\n    this.setState({ expanded: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { options, selectedOption } = this.state;\n\n    switch(e.key) {\n    case 'ArrowDown':\n      e.preventDefault();\n\n      if (options.length > 0) {\n        this.setState({ selectedOption: Math.min(selectedOption + 1, options.length - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      e.preventDefault();\n\n      if (options.length > 0) {\n        this.setState({ selectedOption: Math.max(selectedOption - 1, -1) });\n      }\n\n      break;\n    case 'Enter':\n      e.preventDefault();\n\n      if (selectedOption === -1) {\n        this.handleSubmit();\n      } else if (options.length > 0) {\n        this.setState({ value: options[selectedOption], error: false }, () => this.handleSubmit());\n      }\n\n      break;\n    }\n  };\n\n  handleOptionClick = e => {\n    const index  = Number(e.currentTarget.getAttribute('data-index'));\n    const option = this.state.options[index];\n\n    e.preventDefault();\n    this.setState({ selectedOption: index, value: option, error: false }, () => this.handleSubmit());\n  };\n\n  _loadOptions = throttle(() => {\n    const { value } = this.state;\n\n    const domain = valueToDomain(value.trim());\n\n    if (typeof domain === 'undefined') {\n      this.setState({ options: [], networkOptions: [], isLoading: false, error: true });\n      return;\n    }\n\n    if (domain.length === 0) {\n      this.setState({ options: [], networkOptions: [], isLoading: false });\n      return;\n    }\n\n    api().get('/api/v1/peers/search', { params: { q: domain } }).then(({ data }) => {\n      if (!data) {\n        data = [];\n      }\n\n      this.setState((state) => ({ networkOptions: data, options: addInputToOptions(state.value, data), isLoading: false }));\n    }).catch(() => {\n      this.setState({ isLoading: false });\n    });\n  }, 200, { leading: true, trailing: true });\n\n  render () {\n    const { intl } = this.props;\n    const { value, expanded, options, selectedOption, error, isSubmitting } = this.state;\n    const domain = (valueToDomain(value) || '').trim();\n    const domainRegExp = new RegExp(`(${escapeRegExp(domain)})`, 'gi');\n    const hasPopOut = domain.length > 0 && options.length > 0;\n\n    return (\n      <div className={classNames('interaction-modal__login', { focused: expanded, expanded: hasPopOut, invalid: error })}>\n\n        <iframe\n          ref={this.setIFrameRef}\n          style={{display: 'none'}}\n          src='/remote_interaction_helper'\n          sandbox='allow-scripts allow-same-origin'\n          title='remote interaction helper'\n        />\n\n        <div className='interaction-modal__login__input'>\n          <input\n            ref={this.setRef}\n            type='text'\n            value={value}\n            placeholder={intl.formatMessage(messages.loginPrompt)}\n            aria-label={intl.formatMessage(messages.loginPrompt)}\n            autoFocus\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n            autoComplete='off'\n            autoCapitalize='off'\n            spellCheck='false'\n          />\n\n          <Button onClick={this.handleSubmit} disabled={isSubmitting || error}><FormattedMessage id='interaction_modal.login.action' defaultMessage='Take me home' /></Button>\n        </div>\n\n        {hasPopOut && (\n          <div className='search__popout'>\n            <div className='search__popout__menu'>\n              {options.map((option, i) => (\n                <button key={option} onMouseDown={this.handleOptionClick} data-index={i} className={classNames('search__popout__menu__item', { selected: selectedOption === i })}>\n                  {option.split(domainRegExp).map((part, i) => (\n                    part.toLowerCase() === domain.toLowerCase() ? (\n                      <mark key={i}>\n                        {part}\n                      </mark>\n                    ) : (\n                      <span key={i}>\n                        {part}\n                      </span>\n                    )\n                  ))}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nconst IntlLoginForm = injectIntl(LoginForm);\n\nclass InteractionModal extends React.PureComponent {\n\n  static propTypes = {\n    displayNameHtml: PropTypes.string,\n    url: PropTypes.string,\n    type: PropTypes.oneOf(['reply', 'reblog', 'favourite', 'follow']),\n    onSignupClick: PropTypes.func.isRequired,\n    signupUrl: PropTypes.string.isRequired,\n  };\n\n  handleSignupClick = () => {\n    this.props.onSignupClick();\n  };\n\n  render () {\n    const { url, type, displayNameHtml, signupUrl } = this.props;\n\n    const name = <bdi dangerouslySetInnerHTML={{ __html: displayNameHtml }} />;\n\n    let title, actionDescription, icon;\n\n    switch(type) {\n    case 'reply':\n      icon = <Icon id='reply' icon={ReplyIcon} />;\n      title = <FormattedMessage id='interaction_modal.title.reply' defaultMessage=\"Reply to {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.reply' defaultMessage='With an account on Mastodon, you can respond to this post.' />;\n      break;\n    case 'reblog':\n      icon = <Icon id='retweet' icon={RepeatIcon} />;\n      title = <FormattedMessage id='interaction_modal.title.reblog' defaultMessage=\"Boost {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.reblog' defaultMessage='With an account on Mastodon, you can boost this post to share it with your own followers.' />;\n      break;\n    case 'favourite':\n      icon = <Icon id='star' icon={StarIcon} />;\n      title = <FormattedMessage id='interaction_modal.title.favourite' defaultMessage=\"Favorite {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.favourite' defaultMessage='With an account on Mastodon, you can favorite this post to let the author know you appreciate it and save it for later.' />;\n      break;\n    case 'follow':\n      icon = <Icon id='user-plus' icon={PersonAddIcon} />;\n      title = <FormattedMessage id='interaction_modal.title.follow' defaultMessage='Follow {name}' values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.follow' defaultMessage='With an account on Mastodon, you can follow {name} to receive their posts in your home feed.' values={{ name }} />;\n      break;\n    }\n\n    let signupButton;\n\n    if (sso_redirect) {\n      signupButton = (\n        <a href={sso_redirect} data-method='post' className='link-button'>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </a>\n      );\n    } else if (registrationsOpen) {\n      signupButton = (\n        <a href={signupUrl} className='link-button'>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </a>\n      );\n    } else {\n      signupButton = (\n        <button className='link-button' onClick={this.handleSignupClick}>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </button>\n      );\n    }\n\n    return (\n      <div className='modal-root__modal interaction-modal'>\n        <div className='interaction-modal__lead'>\n          <h3><span className='interaction-modal__icon'>{icon}</span> {title}</h3>\n          <p>{actionDescription} <strong><FormattedMessage id='interaction_modal.sign_in' defaultMessage='You are not logged in to this server. Where is your account hosted?' /></strong></p>\n        </div>\n\n        <IntlLoginForm resourceUrl={url} />\n\n        <p className='hint'><FormattedMessage id='interaction_modal.sign_in_hint' defaultMessage=\"Tip: That's the website where you signed up. If you don't remember, look for the welcome e-mail in your inbox. You can also enter your full username! (e.g. @Mastodon@mastodon.social)\" /></p>\n        <p><FormattedMessage id='interaction_modal.no_account_yet' defaultMessage='Not on Mastodon?' /> {signupButton}</p>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InteractionModal);\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"],"sourceRoot":""}